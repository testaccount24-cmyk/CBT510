***********************************************************************
* IEBLIST - AUTHOR:  RICARDO J. PARANHOS                              *
***********************************************************************
IEBLIST  CSECT
         SAVE  (14,12)
         LR    10,15
         USING IEBLIST,10,11,12
         LA    11,1
         LA    11,4095(10,11)
         LA    12,1
         LA    12,4095(11,12)
         LA    2,SA
         ST    13,SA+4
         ST    2,8(13)
         LR    13,2
***********************************************************************
* GET SYSTEM DATE AND TIME                                            *
***********************************************************************
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=DDMMYYYY
         OI    DATE+4,X'0F'
         UNPK  DATED,DATE
         OI    TIME+3,X'0F'
         UNPK  TIMED,TIME
***********************************************************************
* OPEN DATA SETS                                                      *
***********************************************************************
         OPEN  (SYSPRINT,(OUTPUT),SYSOUT,(OUTPUT))
***********************************************************************
* CHECK IF IS A AUTHORIZED STEP                                       *
***********************************************************************
         TESTAUTH FCTN=1
         LTR   15,15
         BZ    OK_AUTH
***********************************************************************
* PRINT A MESSAGE FOR WARNING OF NOT FULLY FUNCTIONAL                 *
***********************************************************************
         OI    FLAG_AUTH,X'FF'
         LH    15,IEB025E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSOUT,SPACE
         B     GET_STORAGE
***********************************************************************
* PRINT A INFORMATIONAL MESSAGE FOR PROCESS AUTHORIZED                *
***********************************************************************
OK_AUTH  EQU   *
         LH    15,IEB026I
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSOUT,SPACE
***********************************************************************
* OBTAIN STORAGE FOR PROCESSING                                       *
***********************************************************************
GET_STORAGE EQU *
         LA    1,SYSIN_ADDR
         L     15,=V(STOR_OBT)
         BALR  14,15
         L     1,SYSIN_ADDR
         L     15,=V(LE_SYSIN)
         BALR  14,15
***********************************************************************
* FIND FOR A VALID KEYWORD                                            *
***********************************************************************
         L     9,SYSIN_ADDR
CLI      EQU   *
         CLC   0(4,9),=4XL1'FF'
         BE    ENDPARM
VERPARM  EQU   *
         CLC   0(4,9),=CL4'VOL('
         BE    #VOL
         CLC   0(4,9),=CL4'ADD('
         BE    #ADD
         CLC   0(4,9),=CL4'REF('
         BE    #REF
         CLC   0(7,9),=CL7'CATALOG'
         BE    #CAT
         CLC   0(4,9),=CL4'DSN('
         BE    #DSN
         CLC   0(3,9),=CL3'SG('
         BE    #SG
         CLC   0(5,9),=CL5'NOLIST'
         BE    #NOLIST
         CLI   0(9),C','
         BNE   INVALID_COMMAND
         LA    9,1(9)
         B     CLI
***********************************************************************
* SEND MESSAGE FOR INVALID KEYWORD                                    *
***********************************************************************
INVALID_COMMAND EQU *
         LH    15,IEB001E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+25(5),0(9)
         PUT   SYSOUT,SPACE
         B     RETURN8
***********************************************************************
* ONLY PICK DATASETS REFERENCED BEFORE A CERTAIN 7 DIGIT DATE YYYYDDD *
***********************************************************************
#REF     EQU   *
         OI    FLAG2,X'01'
         LA    9,4(,9)
         MVC   INDATE(7),0(9)
         OC    INDATE(7),=X'F0F0F0F0F0F0F0'    MORE NUMERIC
         LA    9,8(,9)
         PACK  PACKYR(3),INYEAR
         SP    PACKYR,=P'1900'
         XC    DOUBLE,DOUBLE
         MVC   DOUBLE+5(3),PACKYR
         XR    1,1
         CVB   1,DOUBLE
         STC   1,OUTDATE
         PACK  PACKDAY(2),INDAY
         XC    DOUBLE,DOUBLE
         MVC   DOUBLE+6(2),PACKDAY
         XR    1,1
         CVB   1,DOUBLE
         STCM  1,3,OUTDATE+1
         B     CLI
***********************************************************************
* PROCESS  A SELECT FOR STORAGE GROUP                                 *
***********************************************************************
#SG      EQU   *
         OI    FLAG,X'04'
         LA    9,3(9)
         LA    1,CALL_LIST
         OI    STGADDR,X'80'
         L     15,STGADDR
         BASSM 14,15
         L     9,PARM_ADDR
         LA    9,1(9)
         LTR   15,15
         BNZ   INVALID_COMMAND
         B     CLI
***********************************************************************
* PROCESS  OPTION CATALOG SELECTED                                    *
***********************************************************************
#CAT     EQU   *
         OI    FLAG_CATALOG,X'FF'
         LA    9,7(9)
         B     CLI
***********************************************************************
* PROCESS  A VOLUME ADDRESS SELECTED                                  *
***********************************************************************
#ADD     EQU   *
         OI    FLAG,X'08'
         LA    9,4(9)
         CLI   0(9),C')'
         BE    ENDADD
         MVC   LOW_ADDR,0(9)
         LA    9,4(9)
         CLI   0(9),C'-'
         BE    *+14
         MVC   HI_ADDR,LOW_ADDR
         B     #ADD
         LA    9,1(9)
         MVC   HI_ADDR,0(9)
         LA    9,4(9)
         B     #ADD
ENDADD   EQU   *
         MVC   TABMASK+193(6),TAB_ALFA
         MVC   TABMASK+240(10),TAB_NUM
         TR    HI_ADDR,0(1)
         TR    LOW_ADDR,0(1)
         LA    9,1(9)
         MVC   TABMASK+193(6),=6X'00'
         MVC   TABMASK+240(10),=10X'00'
         B     CLI
***********************************************************************
* SET A FLAG TO NO PTINT OF DATA SET NAME ON VOLUME                   *
***********************************************************************
#NOLIST  EQU   *
         OI    FLAG,X'01'
         LA    9,6(9)
         B     CLI
***********************************************************************
* PROCESS  A VOLUME NAME SELECTED                                     *
***********************************************************************
#VOL     EQU   *
         OI    FLAG,X'04'
         LA    9,4(9)
         L     8,VOLUME_ADDR
         USING VOLUME_DSECT,8
         LH    15,VOLUME_CNT
         MH    15,=H'7'
         LA    8,0(15,8)
CLIVOL   EQU   *
         CLI   0(9),C'-'
         BE    VOLUME_EXCLUDE
         BLANK VOLUME_NAME
         TRT   0(7,9),TAB_TRT
         BZ    INVALID_COMMAND
         LR    3,1
         SR    1,9
         BCTR  1,0
         EX    1,MVC_VOLUME
         STC   1,VOLUME_LENGTH
         OC    VOLUME_LENGTH,MASK_EXCLUDE
         NI    MASK_EXCLUDE,X'00'
         LH    15,VOLUME_CNT
         LA    15,1(15)
         STH   15,VOLUME_CNT
         LA    8,7(8)
         LA    9,1(3)
         STC   2,BYTE
         CLI   BYTE,C')'
         BNE   CLIVOL
         B     CLI
VOLUME_EXCLUDE EQU *
         LA    9,1(9)
         OI    MASK_EXCLUDE,X'F0'
         B     CLIVOL
MVC_VOLUME MVC VOLUME_NAME(0),0(9)
***********************************************************************
* PROCEDURE TO VALIDATE OF DATA SET NAME                              *
***********************************************************************
#DSN     EQU   *
         OI    FLAG,X'02'
         LA    9,4(9)
         L     8,DSNAME_ADDR
         USING DSNAME_DSECT,8
CLIDSNE  EQU   *
         BLANK DSNAME_NAME
         TRT   0(45,9),TAB_TRT
         BZ    INVALID_COMMAND
         LR    3,1
         SR    1,9
         STC   1,DSNAME_LENGTH
         BCTR  1,0
         EX    1,MVC_DSNAME
         STC   2,BYTE
         EX    1,TRT_TABMASK
         BZ    FULL_NAME
         OI    FLAG,X'10'
FULL_NAME EQU *
         LH    15,DSNAME_CNT
         LA    15,1(15)
         STH   15,DSNAME_CNT
         LA    8,45(8)
         LA    9,1(3)
         CLI   BYTE,C')'
         BNE   CLIDSNE
         B     CLI
MVC_DSNAME MVC DSNAME_NAME(0),0(9)
TRT_TABMASK TRT DSNAME_NAME(0),TABMASK
***********************************************************************
* SEARCH ON UCB FOR A VOLUME                                          *
***********************************************************************
ENDPARM  EQU   *
         MVC   TABMASK+193(6),TAB_ALFA
         MVC   TABMASK+240(10),TAB_NUM
         XC    AREA,AREA
PESQUCB  EQU   *
         UCBSCAN COPY,                                                 X
               WORKAREA=AREA,                                          X
               UCBAREA=UCBAREA,                                        X
               DEVCLASS=DASD,                                          X
               RANGE=ALL,                                              X
               DYNAMIC=YES
         LTR   15,15
         BNZ   ENDVOLS
         LA    8,UCBAREA
         USING UCBOB,8
***********************************************************************
* TEST IF THE VOLUME IS ONLINE                                        *
***********************************************************************
         TM    UCBSTAT,X'80'
         BNO   PESQUCB
***********************************************************************
* TEST IF WAS SELECTED A VOLUME NAME TO PROCESSING                    *
***********************************************************************
         TM    FLAG,X'04'
         BNO   NEXT
***********************************************************************
* LOOP TO COMPARE A VOLUME                                            *
***********************************************************************
         LH    15,VOLUME_CNT
         L     1,VOLUME_ADDR
CLC_VOLUME EQU *
         XR    2,2
         TM    0(1),X'F0'
         BO    CLC_EXCLUDE
CLC_INCLUDE EQU *
         ICM   2,1,0(1)
         EX    2,CLCVOL
         BE    NEXT
         LA    1,7(1)
         BCT   15,CLC_VOLUME
         B     PESQUCB
CLC_EXCLUDE EQU *
         MVC   BYTE,0(1)
         NI    BYTE,X'0F'
         ICM   2,1,BYTE
         EX    2,CLCVOL
         BE    PESQUCB
         LA    1,7(1)
         BCT   15,CLC_VOLUME
***********************************************************************
* VALIDATE MVS UCBTYPES OF DASD VOLUMES                               *
***********************************************************************
NEXT     EQU   *
         TM    UCBTYP+3,X'04'
         BNO   *+10
         MVC   UCBUNIT,=CL4'9345'
         TM    UCBTYP+3,X'0E'
         BNO   *+10
         MVC   UCBUNIT,=CL4'3380'
         TM    UCBTYP+3,X'0F'
         BNO   *+10
         MVC   UCBUNIT,=CL4'3390'
***********************************************************************
* GET A VOLUME ADDRESS WITH 4 DIGIT AND COMPARE                       *
***********************************************************************
         ST    8,SALVA8
         UCBDEVN DEVN=FULL,UCBPTR=SALVA8
         MVC   ADDRUCB,FULL
         TM    FLAG,X'08'
         BNO   ALLOC
         TR    FULL,TABMASK
         CLC   FULL,LOW_ADDR
         BL    PESQUCB
         CLC   FULL,HI_ADDR
         BH    PESQUCB
***********************************************************************
* DYNAMIC ALLOCATE THE VOLUME TO PROCESS                              *
***********************************************************************
ALLOC    EQU   *
         MVC   VOLUCB,UCBVOLI
         MVC   DSNVVDS+17(6),UCBVOLI
         MVC   VOLSER+6(6),UCBVOLI
         MVC   UNIT+6(4),UCBUNIT
         LA    1,ALOC
         MVC   ALOCTP,=A(VTOCALOC)
         MVC   ALOCVC,=AL1(1)
         DYNALLOC
         LTR   15,15
         BZ    ALOCOK
         LH    15,IEB002E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         XR    15,15
         ICM   15,B'0011',ALOCER
         CVD   15,DOUBLE
         UNPK  SPACE+38(5),DOUBLE+5(3)
         OI    SPACE+42,X'F0'
         MVC   SPACE+51(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     PESQUCB
***********************************************************************
* DYNAMICALLY ALLOCATE THE VVDS OF THE VOLUME TO BE PROCESSED         *
***********************************************************************
ALOCOK   EQU   *
         LH    15,IEB009I
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+18(6),VOLUCB
         MVC   SPACE+62(4),ADDRUCB
         PUT   SYSOUT,SPACE
***********************************************************************
* TEST IF THE PROGRAM IS AUTHORIZED TO EXECUTE VVDS ALLOCATE          *
***********************************************************************
         TM    FLAG_AUTH,X'FF'
         BNO   ALLOC_VVDS
         OI    FLAG,X'20'
         B     ALOCOK1
***********************************************************************
* ALLOCATE VVDS                                                       *
***********************************************************************
ALLOC_VVDS EQU *
         LA    1,ALOC
         MVC   ALOCTP,=A(VVDSALOC)
         DYNALLOC
         LTR   15,15
         BZ    ALOCOK1
         OI    FLAG,X'20'
         CLC   ALOCER,=XL2'1708'
         BE    ALOCOK1
         LH    15,IEB010I
         A     15,MSGADDR
         MVC   SPACE,0(15)
         MVC   SPACE+26(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     PESQUCB
CLCVOL   CLC   1(0,1),UCBVOLI
         DROP  8
***********************************************************************
*              OPEN THE VTOC                                          *
***********************************************************************
ALOCOK1  EQU   *
         RDJFCB VTOC
         USING INFMJFCB,2
         LA    2,JFCBAREA
         LTR   15,15
         BZ    DDOK
         LH    15,IEB114E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+48(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     RETURN16                RETURN TO OS
DDOK     EQU   *
         MVI   JFCBDSNM,X'04'          CREATE DSNAME
         MVC   JFCBDSNM+1(43),JFCBDSNM    - 44X'04'
         OI    JFCBTSDM,JFCNWRIT       DO NOT WRITE JFCB DURING OPEN
         DROP  2
         OPEN  (VTOC,(INPUT)),TYPE=J
         TM    FLAG,X'20'
         BO    GETDEB
         OPEN  (VVDS,(INPUT))
         LTR   15,15
         BZ    GETDEB
         OI    FLAG,X'20'
***********************************************************************
*              ENQUEUE ON VTOC                                        *
***********************************************************************
GETDEB   EQU   *
         L     1,DCBDEBAD-IHADCB+VTOC              GET A(DEB)
         ST    1,DEBADDR              SAVE DEB ADDRESS
         LA    1,DEBUCBAD-DEBDASD+DEBBASND-DEBBASIC(1) GET A(UCB)
         L     1,0(1)                LOAD UCB ADDRESS
         ST    1,UCBADDR
***********************************************************************
* OBTAIN AVAILABLE SPACE ON THE VOLUME BEING PROCESSED                *
***********************************************************************
LSPACE   EQU   *
         LSPACE UCB=UCBADDR,DATA=LSPTEXT
         LTR   15,15
         BNZ   ERROLSPC
         LA    1,LSPTEXT
         XR    15,15
         ICM   15,15,8(1)
         CVD   15,DOUBLE
         ZAP   CYL_FREE_VOLUME,DOUBLE
         XR    15,15
         ICM   15,15,12(1)
         CVD   15,DOUBLE
         ZAP   TRK_FREE_VOLUME,DOUBLE
         AP    TRK_FREE_TOTAL,TRK_FREE_VOLUME
         AP    CYL_FREE_TOTAL,CYL_FREE_VOLUME
         B     IXTEST
ERROLSPC EQU   *
         LH    15,IEB012E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSOUT,SPACE
         CLOSE VTOC
         CLOSE VVDS
         B     UNALLOC
***********************************************************************
* VERIFY WHETHER THE VTOC OF THE VOLUME IS INDEXED OR NOT             *
***********************************************************************
IXTEST   EQU   *
         L     1,UCBADDR
         CVAFTST UCB=(1)
         CH    15,=H'8'
         BE    IXVTOC
         LH    15,IEB013E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+26(6),VOLUCB
         PUT   SYSOUT,SPACE
***********************************************************************
* INITIALIZE THE BUFFER LIST HEADER AND ELEMENTS                      *
***********************************************************************
IXVTOC   EQU   *
         LA    4,CVPL
         USING CVPL$MAP,4
         MVC   CVDEB,DEBADDR
         XC    BFLH$DEF(BFL$SIZE),BFLH$DEF
         LA    1,BFLH$DEF
         USING BFL$MAP,1
         MVI   BFLHNOE,BFLE$N
         OI    BFLHFL,BFLHDSCB         CCHHR OF DSCB TO BE USED
         LA    2,BFLH$DEF+BFLHLN
         USING BFLE,2
         LA    3,DSCB$DEF
         LA    5,BFLE$N
BFLE$INT EQU   *
         OI    BFLEFL,BFLECHR
         MVI   BFLELTH,DSCB$SIZ
         ST    3,BFLEBUF
         LA    2,BFLELN(2)
         LA    3,DSCB$SIZ(3)
         BCT   5,BFLE$INT
         DROP  1,2
***********************************************************************
* INITIALIZE THE FILTERING FIELD FOR SEARCHING THE VTOC               *
***********************************************************************
         XC    FCL$DEF(FCLHDLEN),FCL$DEF
         LA    1,FCL$DEF
         USING FCL$MAP,1
         MVC   FCLID,FCL$ID
         LA    2,FCLHDEND
         USING FCLDSN,2
         TM    FLAG,X'02'
         BNO   ALL_DSETS
         TM    FLAG,X'10'
         BO    MASK_DSETS
         L     8,DSNAME_ADDR
         LH    15,DSNAME_CNT
         MVC   FCLCOUNT,DSNAME_CNT
         OI    FCL1FLAG,FCL1LIST
DSNAME_LOOP EQU *
         XC    FCLDSN(FCLDSNEL),FCLDSN
         MVC   FCLDSNLG,0(8)
         LA    3,1(8)
         ST    3,FCLDSNA
         LA    8,45(8)
         LA    2,FCLDSNEL(2)
         BCT   15,DSNAME_LOOP
         B     INITVTIX
MASK_DSETS EQU *
         L     8,DSNAME_ADDR
         LH    3,DSNCOUNT
         MH    3,=H'45'
         LA    8,0(3,8)
         MVC   FCLCOUNT,=H'1'
         MVC   FCLDSNLG,0(8)
         LA    3,1(8)
         ST    3,FCLDSNA
         B     INITVTIX
ALL_DSETS EQU  *
         MVC   FCLCOUNT,=H'1'
         MVI   FCLDSNLG,X'02'
         LA    3,=C'**'
         ST    3,FCLDSNA
         DROP  1,2
***********************************************************************
* READ THE VTOC FOR FIRST TIME                                        *
***********************************************************************
INITVTIX EQU   *
         NI    FLAG,X'7F'
         CVAFFILT ACCESS=READ,FCL=FCL$DEF,BUFLIST=BFLH$DEF,            X
               MF=(E,CVPL)
TEST$RET EQU   *
         LTR   15,15
         BZ    READLAST
         CH    15,=H'4'
         BNE   IXSEQERR
         CLI   CVSTAT,STAT064
         BNE   IXSEQERR
         B     READOK
***********************************************************************
* INITIALIZE READING THE VTOC BUFFER AND START SEARCHING              *
***********************************************************************
READLAST EQU   *
         OI    FLAG,X'80'
READOK   EQU   *
         LA    2,FCL$DEF
         USING FCL$MAP,2
         XR    3,3
         ICM   3,3,FCLDSCBR
         BZ    TST$RSUM
         LA    2,DSCB$DEF
         USING DSCB$MAP,2
         OI    FLAG,X'40'
READVTIX EQU   *
         LTR   3,3                   CHECK FOR END OF DSCB'S
         BZ    TST$RSUM                EXIT IF END OF VTOC
         TM    FLAG,X'40'
         BO    *+8
         LA    2,DSCB$SIZ(2)
         NI    FLAG,X'BF'
         BCTR  3,0
         ZAP   CYL_LOW_EXTENT,=P'0'
         ZAP   CYL_HIGH_EXTENT,=P'0'
         ZAP   TRK_LOW_EXTENT,=P'0'
         ZAP   TRK_HIGH_EXTENT,=P'0'
         CLI   DS1FMTID,0              IS THIS DSCB UNUSED
         BE    READVTIX                YES - DONT COUNT IT
         CLI   DS1FMTID,C'1'           IS THIS A FORMAT 1 DSCB
         BE    FORMAT1
         CLI   0(2),C'4'
         BE    FORMAT4
         B     READVTIX
***********************************************************************
* EMITE RESUME NA CONTINUACAO DA LEITURA DA VTOC                      *
***********************************************************************
TST$RSUM EQU   *
         TM    FLAG,X'80'
         BO    IXCLOSE
         CVAFFILT ACCESS=RESUME,FCL=FCL$DEF,BUFLIST=BFLH$DEF,          X
               FLTAREA=KEEP,MF=(E,CVPL)
         B     TEST$RET
***********************************************************************
* TRATA OS CAMPOS REFERENTES A FORMAT 4 DO VOLUME                     *
***********************************************************************
FORMAT4  EQU   *
         XR    15,15
         ICM   15,3,20(2)
         CVD   15,DOUBLE
         MVC   TRK_CYL,DOUBLE+6
         B     READVTIX
***********************************************************************
* READ FORMAT3 OF DATA SET                                            *
***********************************************************************
FORMAT3  EQU   *
         NI    FMT3,X'F0'
         MVC   MAX_EXTENT,=H'4'
         MVC   CCHHR3,0(5)
         OBTAIN ACTADDR
         LTR   15,15
         BZ    SEEK_OK
         LH    15,IEB112E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+54(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     RETURN8
***********************************************************************
* SEEK THE VOLUME TO FIND A FORMAT3                                   *
***********************************************************************
SEEK_OK  EQU   *
         LA    5,FMT3AREA
         CLC   0(4,5),=XL4'03030303'
         BE    FORMAT3_READ_OK
         LH    15,IEB113E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+48(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     RETURN8
***********************************************************************
* OBTAIN THE FORMAT 3 AND CALCULATE THE EXTENTS                       *
***********************************************************************
FORMAT3_READ_OK EQU *
         LA    5,4(5)
FORMAT3_NEXT_EXTENT EQU *
         XR    6,6
         IC    6,EXTNTS
         CH    6,MAX_EXTENT
         BNH   LAST_FORMAT3
         SH    6,MAX_EXTENT
         STC   6,EXTNTS
         LH    6,MAX_EXTENT
         OI    FMT3,X'01'
LAST_FORMAT3 EQU *
         BAL   14,ADDCYL
         LA    5,10(5)
         BCT   6,LAST_FORMAT3
         TM    FMT3,X'F1'
         BNO   PRINTL
         TM    FMT3,X'02'
         BO    FORMAT3
         LA    5,1(5)
         MVC   MAX_EXTENT,=H'9'
         NI    FMT3,X'F0'
         OI    FMT3,X'02'
         B     FORMAT3_NEXT_EXTENT
ACTADDR  CAMLST SEEK,CCHHR3,VOLUME3,FMT3AREA
***********************************************************************
* PROCESS THE FORMAT 1 FIELDS FOR A DATA SET                          *
***********************************************************************
FORMAT1  EQU   *
* ------
         TM    FLAG2,X'01'            BEF DATE PROCESSING IN EFFECT?
         BZ    ENDREFP
         CLC   =X'000000',DS1REFD
         BE    READVTIX
         CLC   OUTDATE(3),DS1REFD
         BL    READVTIX
ENDREFP  DS    0H
* ------
         BLANK LINHA
         ZAP   TRK_ALOC_EXTENT,=P'0'
         AP    DSN_VOLUME,=P'1'
         MVC   DSNAME,DS1DSNAM
         MVC   PRT_VOLUME,VOLUCB
***********************************************************************
* TEST IF IS SET TO SEARCH CATALOG INFORMATION ABOUT DATA SET         *
***********************************************************************
         TM    FLAG_CATALOG,X'FF'
         BNO   NO_CATALOG
         MVI   PRT_CATALOG_DSN,C'N'
         MVC   DSNAME_CATALOG,DSNAME
***********************************************************************
* EXECUTE LOCATE MACRO INSTRUCTION TO ACCESS CATALOG INFORMATION      *
***********************************************************************
         LOCATE CAMLST
         LTR   15,15
         BNZ   NO_CATALOG
         LA    5,LISTA_CATALOG
         LH    6,0(5)
         LA    5,2(5)
***********************************************************************
* COMPARE THE VOLUME FOUND ON CATALOG WITH THE INDICATED              *
***********************************************************************
FIND_VOL_CATALOG EQU *
         CLC   VOLUCB,4(5)
         BE    OK_CATALOG
         LA    5,12(5)
         BCT   6,FIND_VOL_CATALOG
         MVI   PRT_CATALOG_DSN,C'E'
         B     NO_CATALOG
CAMLST   CAMLST NAME,DSNAME_CATALOG,,LISTA_CATALOG
OK_CATALOG EQU *
         MVI   PRT_CATALOG_DSN,C'Y'
***********************************************************************
* OBTAIN EXTENTS NUMBER TO DATA SETS IF IS NEED READ FORMAT 3 DSCB    *
***********************************************************************
NO_CATALOG EQU *
         NI    FMT3,X'00'
         MVC   EXTNTS,DS1NOEPV
         XR    15,15
         ICM   15,1,DS1NOEPV
         CVD   15,DOUBLE
         CH    15,=H'3'
         BNH   NO_NEED_FORMAT3
         OI    FMT3,X'F0'
NO_NEED_FORMAT3 EQU *
         MVC   PRT_EXTENTS_DSN,MASK3
         ED    PRT_EXTENTS_DSN,DOUBLE+6
         MVC   PRT_SMSFLAG_DSN,=C'Y'
         TM    DS1SMSFG,DS1SMSDS
         BO    *+10
         MVC   PRT_SMSFLAG_DSN,=C'N'
***********************************************************************
* PROCESS CREATE DATE AND REFERENCE DATE                              *
***********************************************************************
VERIFY_CREATE_DATE EQU *
         CLC   DS1CREDT,DATE_NULL
         BE    NULL_CREATE_DATE
         XR    15,15
         ICM   15,1,DS1CREDT
         CVD   15,DOUBLE
         AP    DOUBLE,=P'1900'
         UNPK  JULGRIN(5),DOUBLE+5(3)
         OI    JULGRIN+4,X'F0'
         XR    15,15
         ICM   15,3,DS1CREDT+1
         CVD   15,DOUBLE
         UNPK  JULGRIN+5(3),DOUBLE+6(2)
         OI    JULGRIN+7,X'F0'
         JULGREG JULGRIN+1,JULGROUT,DOUBLE
         MVC   DIACREDT,JULGROUT
         MVI   DIACREDT+2,C'/'
         MVC   MESCREDT,JULGROUT+2
         MVI   MESCREDT+2,C'/'
         MVC   ANOCREDT,JULGROUT+4
         B     VERIFY_REFER_DATE
NULL_CREATE_DATE EQU *
         MVC   DTECREDT,DATE_NONE
VERIFY_REFER_DATE EQU *
         CLC   DS1REFD,DATE_NULL
         BE    NULL_REFER_DATE
         XR    15,15
         ICM   15,1,DS1REFD
         CVD   15,DOUBLE
         AP    DOUBLE,=P'1900'
         UNPK  JULGRIN(5),DOUBLE+5(3)
         OI    JULGRIN+4,X'F0'
         XR    15,15
         ICM   15,3,DS1REFD+1
         CVD   15,DOUBLE
         UNPK  JULGRIN+5(3),DOUBLE+6(2)
         OI    JULGRIN+7,X'F0'
         JULGREG JULGRIN+1,JULGROUT,DOUBLE
         MVC   DIAREFDT,JULGROUT
         MVI   DIAREFDT+2,C'/'
         MVC   MESREFDT,JULGROUT+2
         MVI   MESREFDT+2,C'/'
         MVC   ANOREFDT,JULGROUT+4
         B     VERIFY_DATASET_ORG
NULL_REFER_DATE EQU *
         MVC   DTEREFDT,DATE_NONE
***********************************************************************
* VERIFY THE TYPE OF DATASET WHICH IS BEING HANDLED                   *
***********************************************************************
VERIFY_DATASET_ORG EQU *
         MVC   PRT_DSORG_DSN,=CL2'UN'
         TM    DS1DSORG,DS1DSGIS
         BNO   *+16
         MVC   PRT_DSORG_DSN,=CL2'IS'
         AP    DSNIS_VOLUME,=P'1'
         TM    DS1DSORG,DS1DSGPS
         BNO   *+16
         MVC   PRT_DSORG_DSN,=CL2'PS'
         AP    DSNPS_VOLUME,=P'1'
         TM    DS1DSORG,DS1DSGDA
         BNO   *+16
         MVC   PRT_DSORG_DSN,=CL2'DA'
         AP    DSNDA_VOLUME,=P'1'
         TM    DS1DSORG,DS1DSGPO
         BNO   *+16
         MVC   PRT_DSORG_DSN,=CL2'PO'
         AP    DSNPO_VOLUME,=P'1'
         TM    DS1DSORG+1,DS1ACBM
         BO    VVDSREAD
         CLC   PRT_DSORG_DSN,=CL3'UN'
         BNE   *+10
         AP    DSNUN_VOLUME,=P'1'
         B     VERRECFM
***********************************************************************
* HANDLE VSAM DATASETS                                                *
***********************************************************************
VVDSREAD EQU   *
         TM    FLAG,X'20'
         BNO   TRATA_VSAM
         LH    15,IEB111E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+46(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     CALCSPAC
TRATA_VSAM EQU *
         MVC   PRT_DSORG_DSN,=CL2'VS'
         AP    DSNVS_VOLUME,=P'1'
         STM   1,9,SALVA19
         XC    VVDSRBA,VVDSRBA
         POINT RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
         GET   RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
***********************************************************************
* LE REGISTRO DA VVDS E PROCURA A HEADER CELL DO ARQUIVO              *
***********************************************************************
NEXTREC  EQU   *
         GET   RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
         L     2,VVDSADR
         MVC   HALF,0(2)
         LH    3,HALF
         LA    2,2(2)
         SH    3,=H'2'
         CLI   2(2),X'E9'
         BNE   NEXTREC
***********************************************************************
* VERIFY THE TYPES OF COMPONENTS BEING HANDLED                        *
***********************************************************************
NEXTCOMP EQU   *
         MVC   HALF,0(2)
         LH    4,HALF
         CLI   2(2),X'E9'
         BE    HEADER
         CLI   2(2),X'23'
         BE    VOLCOMP
         CLI   2(2),X'60'
         BE    DSNCOMP
***********************************************************************
* PREPARE READING THE NEXT COMPONENT                                  *
***********************************************************************
SKIPIT   EQU   *
         AR    2,4
         SR    3,4
         BH    NEXTCOMP
         B     NEXTREC
***********************************************************************
* TRATA A HEADER CELL PARA VER SE O ARQUIVO E O DESEJADO              *
***********************************************************************
HEADER   EQU   *
         XR    7,7
         IC    7,8(2)
         SH    7,=H'2'
         EX    7,CLCVVDS
         BNE   NEXTREC
         B     SKIPIT
CLCVVDS  CLC   DSNAME(0),9(2)
***********************************************************************
* PEGA OS VALORES DE CISIZE E AVGREC DO ARQUIVO                       *
***********************************************************************
DSNCOMP  EQU   *
         MVC   FULL,22(2)
         L     15,FULL
         CVD   15,DOUBLE
         MVC   PRT_BLKSIZE_DSN,MASK5
         ED    PRT_BLKSIZE_DSN,DOUBLE+5
         MVC   FULL,26(2)
         L     15,FULL
         CVD   15,DOUBLE
         MVC   PRT_LRECL_DSN,MASK5
         ED    PRT_LRECL_DSN,DOUBLE+5
         B     SKIPIT
***********************************************************************
* FAZ O CALCULO DO ESPACO ALOCADO E UTILIZADO DO ARQUIVO              *
***********************************************************************
VOLCOMP  EQU   *
         CLI   25(2),X'80'
         BE    NEXTREC
         CLI   25(2),X'C0'
         BE    NEXTREC
         MVC   FULL,17(2)
         L     8,FULL
         MVC   HALF,21(2)
         LH    9,HALF
         MVC   FULL(4),9(2)
         L     7,FULL
         AR    7,8
         SLR   6,6
         S     7,=F'1'
         DR    6,8                GET NO OF BLOCKS USED
         SLR   6,6                IGNORE REMINDER ..
         AR    7,9                ROUND TO TRACK BOUNDARY IF NOT
         S     7,=F'1'
         DR    6,9                GET TRACKS USED
         ST    7,TRK_USED         USED TRACKS
         MVC   FULL(4),13(2)     HIGH ALLOCATED RBA
         L     7,FULL
         AR    7,8                ROUND TO BLOCK BOUNDARY
         SLR   6,6
         S     7,=F'1'
         DR    6,8                GET NO OF BLOCKS ALLOCATED
         SLR   6,6                CLEAR THE REMINDER
         AR    7,9                ROUND TO TRACK BOUNDARY
         S     7,=F'1'            LESS 1
         DR    6,9                GET TRACKS ALLLOCATED
         ST    7,TRK_ALOC         ALLOCATED TRACKS
         LA    2,42(2)            POINT TO EXTENT INFORMATION
         SH    4,=H'42'           REMAINING LENGTH
         SLR   5,5                INITIALISE ACTUAL TRACKS
***********************************************************************
* COMPUTE OTHER EXTENTS OF THE DATASET                                *
***********************************************************************
NEXTEXT  EQU   *
         MVC   HALF,10(2)        EXTENT LENGTH
         AH    5,HALF
         LA    2,20(2)            POINT TO NEXT EXT
         SH    4,=H'20'           REMAINING LENGTH
         BH    NEXTEXT            NEXT EXTENT
         LR    7,5                ALLOCATED TRACKS
         CVD   7,DOUBLE
         MVC   PRT_TRK_ALOC_DSN,MASK5
         ED    PRT_TRK_ALOC_DSN,DOUBLE+5
         L     7,TRK_USED
         MR    6,5                USE TRACKS * ACTUAL ALLOCATED
         D     6,TRK_ALOC         GET ACTUAL USED TRACKS
         LTR   6,6                REMINDER ZERO
         BZ    *+8
         LA    7,1(7)             OTHERWISE INCREMENT QUOTIENT 1
         CVD   7,DOUBLE
         MVC   PRT_TRK_USED_DSN,MASK5
         ED    PRT_TRK_USED_DSN,DOUBLE+5
         AP    TRK_USED_VOLUME,DOUBLE+5(3)
VVDSEOD  EQU   *
         LM    1,9,SALVA19
         B     CALCSPAC
***********************************************************************
* VERIFICA O TIPO DE REGISTRO DO ARQUIVO                              *
***********************************************************************
VERRECFM EQU   *
         MVC   PRT_RECFM_DSN,=CL2' '
         TM    DS1RECFM,DS1RECFF
         BNO   *+8
         MVI   PRT_RECFM_DSN,C'F'
         TM    DS1RECFM,DS1RECFV
         BNO   *+8
         MVI   PRT_RECFM_DSN,C'V'
         TM    DS1RECFM,DS1RECFU
         BNO   *+8
         MVI   PRT_RECFM_DSN,C'U'
         TM    DS1RECFM,DS1RECFB
         BNO   *+8
         MVI   PRT_RECFM_DSN+1,C'B'
         TM    DS1RECFM,DS1RECFA
         BNO   *+8
         MVI   PRT_RECFM_DSN+2,C'A'
         TM    DS1RECFM,DS1RECMC
         BNO   *+8
         MVI   PRT_RECFM_DSN+2,C'M'
         CLI   PRT_RECFM_DSN+1,C' '
         BNE   *+14
         MVC   PRT_RECFM_DSN(1),PRT_RECFM_DSN+2
         MVI   PRT_RECFM_DSN+2,C' '
***********************************************************************
* PEGA O TAMANHO DE REGISTRO E BLKSIZE                                *
***********************************************************************
         XR    15,15
         ICM   15,3,DS1BLKL
         CVD   15,DOUBLE
         MVC   PRT_BLKSIZE_DSN,MASK5
         ED    PRT_BLKSIZE_DSN,DOUBLE+5
         XR    15,15
         ICM   15,3,DS1LRECL
         CVD   15,DOUBLE
         MVC   PRT_LRECL_DSN,MASK5
         ED    PRT_LRECL_DSN,DOUBLE+5
         XR    15,15
         ICM   15,3,DS1LSTAR
         CLI   DS1LSTAR+2,X'00'
         BE    EDIT_USED
         LA    15,1(15)
EDIT_USED EQU  *
         CVD   15,DOUBLE
         MVC   PRT_TRK_USED_DSN,MASK5
         ED    PRT_TRK_USED_DSN,DOUBLE+5
         AP    TRK_USED_VOLUME,DOUBLE+5(3)
***********************************************************************
* CALCULATE THE ALLOCATED SPACE OF DATA SET                           *
***********************************************************************
CALCSPAC EQU   *
         LA    5,DS1EXT1
         XR    6,6
         ICM   6,1,EXTNTS
         LTR   6,6
         BZ    PRINTL
         TM    FMT3,X'F0'
         BNO   LOOP_ADDCYL_FORMAT1
***********************************************************************
* SET TO READ THE FIRST THREE EXTENTS                                *
***********************************************************************
ADD_FORMAT_3 EQU *
         SH    6,=H'3'
         STCM  6,1,EXTNTS
         LA    6,3
         MVC   VOLUME3,VOLUCB
LOOP_ADDCYL_FORMAT1 EQU *
         BAL   14,ADDCYL
         LA    5,10(5)
         BCT   6,LOOP_ADDCYL_FORMAT1
         TM    FMT3,X'F0'
         BO    FORMAT3
         B     PRINTL
***********************************************************************
* ROTINA PARA CALCULO DO ESPACO ALOCADO PELO ARQUIVO                  *
***********************************************************************
ADDCYL   EQU   *
         STM   14,15,SALVA14
         XR    15,15
         ICM   15,3,2(5)
         CVD   15,DOUBLE
         ZAP   CYL_LOW_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,4(5)
         CVD   15,DOUBLE
         ZAP   TRK_LOW_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,6(5)
         CVD   15,DOUBLE
         ZAP   CYL_HIGH_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,8(5)
         CVD   15,DOUBLE
         ZAP   TRK_HIGH_EXTENT,DOUBLE
         MP    CYL_LOW_EXTENT,TRK_CYL
         MP    CYL_HIGH_EXTENT,TRK_CYL
         AP    CYL_LOW_EXTENT,TRK_LOW_EXTENT
         AP    CYL_HIGH_EXTENT,TRK_HIGH_EXTENT
         SP    CYL_HIGH_EXTENT,CYL_LOW_EXTENT
         AP    CYL_HIGH_EXTENT,=P'1'
         AP    TRK_ALOC_EXTENT,CYL_HIGH_EXTENT
         LM    14,15,SALVA14
         BR    14
***********************************************************************
* TOTALIZA O ESPACO ALOCADO POR ARQUIVO E VERIFICA SE DEVE IMPRIMIR   *
***********************************************************************
PRINTL   EQU   *
         AP    TRK_ALOC_VOLUME,TRK_ALOC_EXTENT
         MVC   PRT_TRK_ALOC_DSN,MASK5
         ED    PRT_TRK_ALOC_DSN,TRK_ALOC_EXTENT+2
         TM    FLAG,X'01'
         BO    READVTIX
         XC    CABEC,CABEC
         BAL   14,PUTOUT
         PUT   SYSPRINT,LINHA
         AP    NUMLINHA,=P'1'
         B     READVTIX
***********************************************************************
* ROTINA DE IMPRESSAO DAS LINHAS DE RELATORIO                         *
***********************************************************************
PUTOUT   EQU   *
         STM   14,15,SALVA14
         CP    NUMLINHA,=P'61'
         BLR   14
         AP    PAGINA,=P'1'
         LH    15,CABECA1
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSPRINT,SPACE
         LH    15,CABECA2
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+8(2),DATED
         MVC   SPACE+11(2),DATED+2
         MVC   SPACE+14(4),DATED+4
         MVC   SPACE+28(2),TIMED
         MVC   SPACE+31(2),TIMED+2
         MVC   SPACE+34(2),TIMED+4
         UNPK  SPACE+98(3),PAGINA
         OI    SPACE+100,X'F0'
* -----
         TM    FLAG2,X'01'
         BZ    REFSKIP
         MVC   SPACE+66(4),=C'REF='
         MVC   SPACE+70(7),INDATE
REFSKIP  DS    0H
* -----
         PUT   SYSPRINT,SPACE
         BLANK SPACE
         PUT   SYSPRINT,SPACE
         ZAP   NUMLINHA,=P'3'
PUTCAB   EQU   *
         XR    15,15
         IC    15,CABEC
         SLL   15,2
         B     *+4(15)
         B     CABEC1
         LM    14,15,SALVA14
         BR    14
CABEC1   EQU   *
         LH    15,CABECA3
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSPRINT,SPACE
         AP    NUMLINHA,=P'1'
         LM    14,15,SALVA14
         BR    14
***********************************************************************
* TRATAMENTO DOS POSSIVEIS ERROS COM O ACESSO A VTOC                  *
***********************************************************************
IXSEQERR EQU   *
         CLI   CVSTAT,STAT032
         BE    IXCLOSE
         LH    15,IEB115E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+26(3),=C'FIL'
IXMACERR EQU   *
         IC    1,CVSTAT
         N     1,=F'255'
         CVD   1,DOUBLE
         UNPK  SPACE+47(3),DOUBLE+6(2)
         OI    SPACE+49,X'F0'
         CVD   15,DOUBLE
         UNPK  SPACE+36(3),DOUBLE+6(2)
         OI    SPACE+38,X'F0'
IXCLOSE  EQU   *
         CVAFFILT ACCESS=RLSE,FCL=0,BUFLIST=0,                         X
               MF=(E,CVPL)
         TM    FLAG,X'10'
         BNO   CLOSE
         LH    15,DSNCOUNT
         LA    15,1(15)
         STH   15,DSNCOUNT
         CLC   DSNCOUNT,DSNAME_CNT
         BL    IXVTOC
         XC    DSNCOUNT,DSNCOUNT
***********************************************************************
* IMPRIME TOTAIS POR VOLUME                                           *
***********************************************************************
CLOSE    EQU   *
         CLOSE VTOC
         CLOSE VVDS
         BLANK LINHA
         AP    VOLUME_COUNT,=P'1'
         CP    DSN_VOLUME,=P'0'
         BE    UNALLOC
         AP    VOLUME_COUNT_DSN,=P'1'
         MVC   PRT_TRK_ALOC_VOLUME,MASK5
         ED    PRT_TRK_ALOC_VOLUME,TRK_ALOC_VOLUME+2
         MVC   PRT_TRK_USED_VOLUME,MASK5
         ED    PRT_TRK_USED_VOLUME,TRK_USED_VOLUME+2
         AP    TRK_ALOC_TOTAL,TRK_ALOC_VOLUME
         AP    TRK_USED_TOTAL,TRK_USED_VOLUME
         MVC   PRT_DSN_VOLUME,MASK5
         ED    PRT_DSN_VOLUME,DSN_VOLUME+2
         MVC   PRT_DSNPS_VOLUME,MASK5
         ED    PRT_DSNPS_VOLUME,DSNPS_VOLUME+2
         MVC   PRT_DSNPO_VOLUME,MASK5
         ED    PRT_DSNPO_VOLUME,DSNPO_VOLUME+2
         MVC   PRT_DSNIS_VOLUME,MASK5
         ED    PRT_DSNIS_VOLUME,DSNIS_VOLUME+2
         MVC   PRT_DSNDA_VOLUME,MASK5
         ED    PRT_DSNDA_VOLUME,DSNDA_VOLUME+2
         MVC   PRT_DSNVS_VOLUME,MASK5
         ED    PRT_DSNVS_VOLUME,DSNVS_VOLUME+2
         MVC   PRT_DSNUN_VOLUME,MASK5
         ED    PRT_DSNUN_VOLUME,DSNUN_VOLUME+2
         MVC   PRT_CYL_FREE_VOLUME,MASK7
         ED    PRT_CYL_FREE_VOLUME,CYL_FREE_VOLUME+2
         MVC   PRT_TRK_FREE_VOLUME,MASK7
         ED    PRT_TRK_FREE_VOLUME,TRK_FREE_VOLUME+2
         MVI   CABEC,X'01'
         CP    NUMLINHA,=P'56'
         BNH   *+8
         BAL   14,PUTOUT
         BLANK SPACE
         PUT   SYSPRINT,SPACE
         LH    15,CABECA4
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+20(6),VOLUCB
         MVC   SPACE+34(4),UCBUNIT
         PUT   SYSPRINT,SPACE
         BLANK SPACE
         PUT   SYSPRINT,SPACE
         LH    15,CABECA5
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSPRINT,SPACE
         PUT   SYSPRINT,LINHA
         ZAP   NUMLINHA,=P'61'
         AP    DSN_TOTAL,DSN_VOLUME
         AP    DSNUN_TOTAL,DSNUN_VOLUME
         AP    DSNPS_TOTAL,DSNPS_VOLUME
         AP    DSNPO_TOTAL,DSNPO_VOLUME
         AP    DSNIS_TOTAL,DSNIS_VOLUME
         AP    DSNDA_TOTAL,DSNDA_VOLUME
         AP    DSNVS_TOTAL,DSNVS_VOLUME
***********************************************************************
* FREE THE ALLOCATIONS OF VVDS AND VTOC                               *
***********************************************************************
UNALLOC  EQU   *
         LH    15,IEB008I
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+18(6),VOLUCB
         PUT   SYSOUT,SPACE
         LA    1,ALOC
         MVC   ALOCTP,=A(VTOCULOC)
         MVC   ALOCVC,=AL1(2)
         DYNALLOC
ULOCOK   EQU   *
         LA    1,ALOC
         MVC   ALOCTP,=A(VVDSULOC)
         DYNALLOC
***********************************************************************
* INICIALIZA OS CONTADORES INDEX                                      *
***********************************************************************
ZAPINDEX EQU   *
         NI    FLAG,X'DF'
         ZAP   DSN_VOLUME,=P'0'
         ZAP   DSNUN_VOLUME,=P'0'
         ZAP   DSNPS_VOLUME,=P'0'
         ZAP   DSNPO_VOLUME,=P'0'
         ZAP   DSNIS_VOLUME,=P'0'
         ZAP   DSNDA_VOLUME,=P'0'
         ZAP   DSNVS_VOLUME,=P'0'
         ZAP   TRK_ALOC_VOLUME,=P'0'
         ZAP   TRK_USED_VOLUME,=P'0'
         B     PESQUCB
***********************************************************************
* IMPRIME TOTAIS GERAIS OBTIDOS                                       *
***********************************************************************
ENDVOLS  EQU   *
         BLANK LINHA
         MVC   PRT_TRK_ALOC_TOTAL,MASK9
         ED    PRT_TRK_ALOC_TOTAL,TRK_ALOC_TOTAL
         MVC   PRT_TRK_USED_TOTAL,MASK9
         ED    PRT_TRK_USED_TOTAL,TRK_USED_TOTAL
         MVC   PRT_DSN_TOTAL,MASK7
         ED    PRT_DSN_TOTAL,DSN_TOTAL+1
         MVC   PRT_DSNPS_TOTAL,MASK7
         ED    PRT_DSNPS_TOTAL,DSNPS_TOTAL+1
         MVC   PRT_DSNPO_TOTAL,MASK7
         ED    PRT_DSNPO_TOTAL,DSNPO_TOTAL+1
         MVC   PRT_DSNIS_TOTAL,MASK7
         ED    PRT_DSNIS_TOTAL,DSNIS_TOTAL+1
         MVC   PRT_DSNDA_TOTAL,MASK7
         ED    PRT_DSNDA_TOTAL,DSNDA_TOTAL+1
         MVC   PRT_DSNVS_TOTAL,MASK7
         ED    PRT_DSNVS_TOTAL,DSNVS_TOTAL+1
         MVC   PRT_DSNUN_TOTAL,MASK7
         ED    PRT_DSNUN_TOTAL,DSNUN_TOTAL+1
         MVC   PRT_CYL_FREE_TOTAL,MASK9
         ED    PRT_CYL_FREE_TOTAL,CYL_FREE_TOTAL
         MVC   PRT_TRK_FREE_TOTAL,MASK9
         ED    PRT_TRK_FREE_TOTAL,TRK_FREE_TOTAL
         ZAP   NUMLINHA,=P'61'
         BAL   14,PUTOUT
         LH    15,CABECA6
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSPRINT,SPACE
         LH    15,CABECA7
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         MVC   SPACE+11(6),MASK5
         ED    SPACE+11(6),VOLUME_COUNT
         MVC   SPACE+40(6),MASK5
         ED    SPACE+40(6),VOLUME_COUNT_DSN
         PUT   SYSPRINT,SPACE
         LH    15,CABECA10
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         PUT   SYSPRINT,SPACE
         PUT   SYSPRINT,LINHA
RETURN   EQU   *
         LH    15,IEB006I
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         L     15,RETCODE
         CVD   15,DOUBLE
         UNPK  SPACE+55(3),DOUBLE+6(2)
         OI    SPACE+57,X'F0'
         PUT   SYSOUT,SPACE
         CLOSE SYSPRINT
         CLOSE SYSOUT
         L     15,RETCODE
         L     13,SA+4
         RETURN (14,12),RC=(15)
RETURN8  EQU   *
         MVC   RETCODE,=F'8'
         B     RETURN
RETURN16 EQU   *
         MVC   RETCODE,=F'16'
         B     RETURN
***********************************************************************
* TRATA ERRO OCORRIDO DURANTE O ACESSO A VVDS                         *
***********************************************************************
VVDSERRO EQU   *
         SHOWCB RPL=VVDSRPL,AREA=FULL,LENGTH=4,FIELDS=(FDBK)
         L     15,FULL
         CVD   15,DOUBLE
         LH    15,IEB110E
         A     15,MSGADDR
         MVC   SPACE(133),0(15)
         UNPK  SPACE+16(3),DOUBLE+6(2)
         OI    SPACE+18,X'F0'
         MVC   SPACE+47(6),VOLUCB
         PUT   SYSOUT,SPACE
         B     RETURN8
         LTORG
***********************************************************************
* DEFINE AREAS PARA IMPRESSAO DE RELATORIO                            *
***********************************************************************
NUMLINHA DC    PL2'61'
PAGINA   DC    PL2'0'
STGADDR  DC    V(STGFIND)
MSGADDR  DC    V(PUTMSG)
IEB001E  DC    Y(133*0)
IEB002E  DC    Y(133*1)
IEB003W  DC    Y(133*2)
IEB004E  DC    Y(133*3)
IEB005E  DC    Y(133*4)
IEB006I  DC    Y(133*5)
IEB007E  DC    Y(133*6)
IEB008I  DC    Y(133*7)
IEB009I  DC    Y(133*8)
IEB010E  DC    Y(133*9)
IEB110E  DC    Y(133*10)
IEB111E  DC    Y(133*11)
CABECA1  DC    Y(133*12)
CABECA2  DC    Y(133*13)
CABECA3  DC    Y(133*14)
CABECA4  DC    Y(133*15)
CABECA5  DC    Y(133*16)
CABECA6  DC    Y(133*17)
CABECA7  DC    Y(133*18)
CABECA8  DC    Y(133*19)
CABECA9  DC    Y(133*20)
CABECA10 DC    Y(133*21)
IEB011E  DC    Y(133*22)
IEB012E  DC    Y(133*23)
IEB013E  DC    Y(133*24)
IEB014I  DC    Y(133*25)
IEB025E  DC    Y(133*26)
IEB026I  DC    Y(133*27)
IEB010I  DC    Y(133*28)
IEB112E  DC    Y(133*29)
IEB113E  DC    Y(133*30)
IEB114E  DC    Y(133*31)
IEB115E  DC    Y(133*32)
SPACE    DS    CL133
CALL_LIST CALL  ,(VOLUME_ADDR,VOLUME_CNT,PARM_ADDR),VL,MF=L
***********************************************************************
* DEFINE AREAS CONSTANTES PARA O PROGRAMA                             *
***********************************************************************
SA       DC    18F'0'
DOUBLE   DC    D'0'
TRK_ALOC DC    F'0'
TRK_USED DC    F'0'
FULL     DC    F'0'
BYTE     DC    X'0'
MASK_EXCLUDE DC X'0'
HALF     DC    H'0'
MAX_EXTENT DC  H'0'
VVDSADR  DC    F'0'
VVDSRBA  DC    F'0'
SALVA8   DC    F'0'
SALVA19  DC    9F'0'
SALVA14  DC    2F'0'
RETCODE  DC    F'0'
DEBADDR  DC    F'0'
UCBADDR  DC    F'0'
ADDRUCB  DC    F'0'
#FORMAT0 DC    F'0'
JULGRIN  DS    CL8
JULGROUT DS    CL8
TIMED    DS    CL7
DATED    DS    CL9
DATETIME DS    4F
         ORG   DATETIME
TIME     DS    CL4
         DS    CL4
DATE     DS    CL5
         DS    CL3
         ORG
EXTNTS   DS    X
MASK3    DC    X'40202120'
MASK5    DC    X'402020202120'
MASK7    DC    X'4020202020202120'
MASK9    DC    X'40202020202020202120'
TAB_ALFA DC    X'0A0B0C0D0E0F'
TAB_NUM  DC    X'00010203040506070809'
DATE_NULL DC   X'000000'
DATE_NONE DC   CL10'***NONE***'
LOW_ADDR DC    CL4' '
HI_ADDR  DC    CL4' '
UCBUNIT  DC    CL4' '
UCBAREA  DS    CL48
AREA     DS    CL100
PARM_ADDR    DS F
SYSIN_ADDR   DS F
VOLUME_ADDR  DS F
DSNAME_ADDR  DS F
DSNCOUNT     DS H
DSNAME_CNT   DS H
VOLUME_CNT   DS H
VOLUCB   DS    CL6
INDATE   DS    0CL7
INYEAR   DS    CL4
INDAY    DS    CL3
OUTDATE  DS    CL3
PACKYR   DC    PL3'0'
PACKDAY  DC    PL2'0'
BINYR    DC    XL1'00'
BINDAY   DC    XL2'0000'
FLAG     DS    X
FLAG2    DS    X
FLAG_CATALOG DS  X
FLAG_AUTH    DS  X
FMT3     DS    X
CABEC    DS    X
DSNAME_CATALOG DC CL44' '
LISTA_CATALOG  DS 0D
               DS 265C
***********************************************************************
* DEFINE AREAS DE TRABALHO PARA OPERACOES DE CALCULO                  *
***********************************************************************
VOLUME_COUNT     DC    PL3'0'
VOLUME_COUNT_DSN DC    PL3'0'
TRK_CYL         DC    PL2'15'
TRK_LOW_EXTENT  DC    PL5'0'
TRK_HIGH_EXTENT DC    PL5'0'
CYL_LOW_EXTENT  DC    PL5'0'
CYL_HIGH_EXTENT DC    PL5'0'
TRK_ALOC_EXTENT DC    PL5'0'
TRK_ALOC_VOLUME DC    PL5'0'
TRK_USED_VOLUME DC    PL5'0'
CYL_FREE_VOLUME DC    PL5'0'
TRK_FREE_VOLUME DC    PL5'0'
DSNIS_VOLUME    DC    PL5'0'                                            03570
DSNUN_VOLUME    DC    PL5'0'                                            03580
DSNPS_VOLUME    DC    PL5'0'                                            03581
DSNPO_VOLUME    DC    PL5'0'                                            03590
DSNDA_VOLUME    DC    PL5'0'                                            03600
DSNVS_VOLUME    DC    PL5'0'                                            03610
DSN_VOLUME      DC    PL5'0'                                            03620
DSNIS_TOTAL     DC    PL5'0'                                            03621
DSNUN_TOTAL     DC    PL5'0'                                            03621
DSNPS_TOTAL     DC    PL5'0'                                            03622
DSNPO_TOTAL     DC    PL5'0'                                            03623
DSNDA_TOTAL     DC    PL5'0'                                            03624
DSNVS_TOTAL     DC    PL5'0'                                            03625
DSN_TOTAL       DC    PL5'0'
TRK_ALOC_TOTAL  DC    PL5'0'
TRK_USED_TOTAL  DC    PL5'0'
CYL_FREE_TOTAL  DC    PL5'0'
TRK_FREE_TOTAL  DC    PL5'0'
***********************************************************************
* DEFINE LINHA DE RELATORIO                                           *
***********************************************************************
LINHA    DC    CL133' '
         ORG   LINHA
         DC    C' '
DSNAME   DC    CL44' '
         DC    C' '
PRT_VOLUME DC    CL6' '
         DC    C' '
DTECREDT DC    CL10' '
         ORG   DTECREDT
DIACREDT DC    CL2' '
         DC    C'/'
MESCREDT DC    CL2' '
         DC    C'/'
ANOCREDT DC    CL4' '
         DC    C' '
DTEREFDT DC    CL10' '
         ORG   DTEREFDT
DIAREFDT DC    CL2' '
         DC    C'/'
MESREFDT DC    CL2' '
         DC    C'/'
ANOREFDT DC    CL4' '
         DC    CL3' '
PRT_CATALOG_DSN  DC    C' '
         DC    CL3' '
PRT_SMSFLAG_DSN  DC    C' '
PRT_EXTENTS_DSN  DC    CL4' '
                 DC    CL4' '
PRT_DSORG_DSN    DC    CL2' '
                 DC    CL1' '
PRT_RECFM_DSN    DC    CL3' '
                 DC    CL3' '
PRT_LRECL_DSN    DC    CL6' '
PRT_BLKSIZE_DSN  DC    CL6' '
                 DC    C' '
PRT_TRK_ALOC_DSN DC    CL6' '
PRT_TRK_USED_DSN DC    CL6' '
                    ORG
                    ORG   LINHA
                    DC    C' '
PRT_DSN_VOLUME      DC    CL6' '
PRT_DSNPS_VOLUME    DC    CL6' '
PRT_DSNPO_VOLUME    DC    CL6' '
PRT_DSNIS_VOLUME    DC    CL6' '
PRT_DSNDA_VOLUME    DC    CL6' '
PRT_DSNVS_VOLUME    DC    CL6' '
PRT_DSNUN_VOLUME    DC    CL6' '
                    DC    C' '
PRT_TRK_ALOC_VOLUME DC    CL6' '
PRT_TRK_USED_VOLUME DC    CL6' '
PRT_CYL_FREE_VOLUME DC    CL6' '
PRT_TRK_FREE_VOLUME DC    CL6' '
                   ORG
                   ORG   LINHA
                   DC   C' '
PRT_DSN_TOTAL      DC    CL8' '
PRT_DSNPS_TOTAL    DC    CL8' '
PRT_DSNPO_TOTAL    DC    CL8' '
PRT_DSNIS_TOTAL    DC    CL8' '
PRT_DSNDA_TOTAL    DC    CL8' '
PRT_DSNVS_TOTAL    DC    CL8' '
PRT_DSNUN_TOTAL    DC    CL8' '
PRT_TRK_ALOC_TOTAL DC    CL10' '
PRT_TRK_USED_TOTAL DC    CL10' '
PRT_CYL_FREE_TOTAL DC    CL10' '
PRT_TRK_FREE_TOTAL DC    CL10' '
         ORG
***********************************************************************
* WORK AREA TO EXECUTE OBTAIN SEK TO READ FORMAT 3                   *
***********************************************************************
CCHHR3   DS    CL5
VOLUME3  DS    CL6
FMT3AREA DS    CL140
***********************************************************************
* RETURN AREA TO MACRO LSPACE                                         *
***********************************************************************
LSPTEXT  DS    CL40
***********************************************************************
* DEFINE AREAS PARA ALOCACAO DINAMICA DOS VOLUMES                     *
***********************************************************************
ALOC     DC    A(X'80000000'+ALOCRB)
ALOCRB   DC    AL1(20)
ALOCVC   DC    AL1(1)
         DC    AL2(0)
ALOCER   DC    AL2(0)
ALOCIN   DC    AL2(0)
ALOCTP   DC    A(0)
         DC    A(0)
         DC    A(0)
DDVVDS   DC    XL2'1',XL2'1',AL2(8),CL8'VVDS'
DSNVVDS  DC    XL2'2',XL2'1',AL2(17),CL17'SYS1.VVDS.V'
DISPVVDS DC    XL2'4',XL2'1',XL2'1',XL1'8'
VVDSALOC CALL  ,(DDVVDS,DSNVVDS,DISPVVDS),VL,MF=L
VVDSULOC CALL  ,(DDVVDS,DSNVVDS,UFORCE),VL,MF=L
DDNX     DC    XL2'1',XL2'1',AL2(8),CL8'VTOC'
DISP     DC    XL2'4',XL2'1',XL2'1',XL1'8'
UNIT     DC    XL2'15',XL2'1',AL2(4),CL4' '
VOLSER   DC    XL2'10',XL2'1',AL2(6),CL6' '
VTOCALOC CALL  ,(DDNX,DISP,UNIT,VOLSER),VL,MF=L
VTOCULOC CALL  ,(DDNX),VL,MF=L
UFORCE   DC    XL2'7',XL2'0'
***********************************************************************
* OBTEM ESPACO PARA AREA DAS MACROS DE MAPEAMENTO                     *
***********************************************************************
FCL$ID   DC    CL4'FCL'
FCL$DEF  DS    (FCLHDLEN+255*FCLDSNEL)X
FCL$SIZE EQU   *-FCL$DEF
BFLH$DEF DS    (BFLHLN)X
BFLE$DEF DS    (BFLE$N*BFLELN)X
BFL$SIZE EQU   *-BFLH$DEF
DSCB$DEF DS    (BFLE$N*DSCB$SIZ)X
BFLE$N   EQU   11
***********************************************************************
* DEFINE DCB DOS ARQUIVOS QUE SERAO UTILIZADOS                        *
***********************************************************************
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    X
               LRECL=133,RECFM=FBA,BLKSIZE=13300
SYSOUT   DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=(PM),                      X
               LRECL=133,RECFM=FBA,BLKSIZE=13300
***********************************************************************
* DEFINE ACB E RPL QUE SERAO USADAS PARA LEITURA DA VVDS              *
***********************************************************************
VVDS     ACB   DDNAME=VVDS,MACRF=(ADR,SEQ,IN),EXLST=EODAD
VVDSRPL  RPL   ACB=VVDS,AREA=VVDSADR,AREALEN=4,ARG=VVDSRBA,            X
               OPTCD=(ADR,SEQ,LOC)
EODAD    EXLST EODAD=VVDSEOD
***********************************************************************
* BLOCO DA DSCB E AREAS PARA I/O                                      *
***********************************************************************
CVPL     CVAFFILT MF=L,BRANCH=NO,FLTAREA=KEEP
VTOC     DCB   DDNAME=VTOC,DSORG=PS,RECFM=U,KEYLEN=44,BLKSIZE=96,      X
               MACRF=(R),EODAD=CLOSE,EXLST=RDJFLIST
RDJFLIST DC    X'87',AL3(JFCBAREA)
JFCBAREA DC    176X'0'
***********************************************************************
* DEFINE TABELA PARA TRATAMENTO DA MASCARA DE COMPARACAO              *
***********************************************************************
TABMASK  DC    256X'00'
         ORG   TABMASK+C'*'
         DC    C'*'
         ORG   TABMASK+C'%'
         DC    C'%'
         ORG   TABMASK+C'/'
         DC    C'/'
         ORG
TAB_TRT  DC    256X'00'
         ORG   TAB_TRT+C')'
         DC    C')'
         ORG   TAB_TRT+C','
         DC    C','
         ORG
***********************************************************************
* DEFINE MAPEAMENTO PARA MASCARA DE VOLUME                            *
***********************************************************************
VOLUME_DSECT  DSECT
VOLUME_LENGTH DS    XL1
VOLUME_NAME   DS    CL6
***********************************************************************
* DEFINE MAPEAMENTO PARA MASCARA DE DATA SET NAME                     *
***********************************************************************
DSNAME_DSECT  DSECT
DSNAME_LENGTH DS    XL1
DSNAME_NAME   DS    CL44
***********************************************************************
* MACROS PARA MAPEAMENTO DAS AREAS A SEREM TRABALHADAS                *
***********************************************************************
         DCBD  DSORG=PS,DEVD=DA
         IEZDEB ,
JFCB     DSECT
         IEFJFCBN ,
CVPL$MAP ICVAFPL CVPLFSA=YES
FCL$MAP  ICVFCL
BFL$MAP  ICVAFBFL
DSCB$MAP DSECT
         IECSDSL1 (1)
DSCB$SIZ EQU   *-IECSDSL1
         CVT   DSECT=YES
         DSECT
         IEFUCBOB
         END   IEBLIST
***********************************************************************
* ROUTINE TO OBTAIN STORAGE AREAS TO RETAIN WORK TABLES               *
***********************************************************************
STOR_OBT CSECT
         STM   14,12,12(13)
         LR    9,1
         LR    12,15
         USING STOR_OBT,12
         LA    2,SA
         ST    13,SA+4
         ST    2,8(13)
         LR    13,2
         STORAGE OBTAIN,LENGTH=72*1024
         ST    1,0(9)
         STORAGE OBTAIN,LENGTH=7*4097
         ST    1,4(9)
         STORAGE OBTAIN,LENGTH=45*255
         ST    1,8(9)
         L     13,SA+4
         LM    14,12,12(13)
         BR    14
SA       DS    18F
         END   STOR_OBT
***********************************************************************
* SUBROTINA PARA LEITURA DO SYSIN                                     *
***********************************************************************
LE_SYSIN CSECT
         STM   14,12,12(13)
         LR    9,1
         LR    12,15
         USING LE_SYSIN,12
         LA    2,SA
         ST    13,SA+4
         ST    2,8(13)
         LR    13,2
         OPEN  (SYSIN,(INPUT))
***********************************************************************
* FAZ LEITURA DOS REGISTROS DE SYSIN PARA AREA TEMPORARIA             *
***********************************************************************
GETIN    EQU   *
         GET   SYSIN,SPACE
         LA    2,72
         LA    1,SPACE
SYSIN_GET EQU *
         CLI   0(1),C' '
         BNE   START_PARM
         LA    1,1(1)
         BCT   2,SYSIN_GET
         B     GETIN
START_PARM EQU *
         LR    3,1
         BCTR  2,0
         EX    2,TRT_SYSIN
         BZ    LINHA_CHEIA
         BCTR  1,0
LINHA_CHEIA EQU *
         SR    1,3
         EX    1,MVC_LINHA
         AR    9,1
         LA    9,1(9)
         B     GETIN
MVC_LINHA MVC  0(0,9),0(3)
TRT_SYSIN TRT  0(0,3),TAB_TRT
ENDIN    EQU   *
         CLOSE (SYSIN)
         MVC   0(4,9),FF
         L     13,SA+4
         LM    14,12,12(13)
         BR    14
         LTORG
SA       DS    18F
FF       DC    4X'FF'
SPACE    DC    CL72' '
TAB_TRT  DC    256X'00'
         ORG   TAB_TRT+C' '
         DC    C' '
         ORG
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=ENDIN
         END   LE_SYSIN
***********************************************************************
* ROTINA PARA TRATAMENTO DO STORAGE GROUP                             *
***********************************************************************
STGFIND  CSECT
STGFIND  AMODE 31
STGFIND  RMODE 24
         SAVE (14,12)
         LR   11,15
         USING STGFIND,11
         ST   13,SA+4
         LA   2,SA
         ST   2,8(13)
         LR   13,2
         LM   4,6,0(1)
         ST   1,PARM_ADDR
         MVC  VOLUME_ADDR,0(4)
         MVC  VOLUME_CNT,0(5)
         ST   6,SYSIN_ADDR
         LR   10,9
***********************************************************************
* OBTEM TAMANHO E NOME DO STORAGE GROUP SOLICITADO                    *
***********************************************************************
CLI_STORGRP EQU *
         BLANK STORGRP_NAME
         TRT   0(9,10),TAB_TRT
         BZ    RETURN
         STC   2,BYTE
         LR    3,1
         L     6,SYSIN_ADDR
         ST    3,0(6)
         SR    1,10
         STH   1,STORGRP_LENGTH
         BCTR  1,0
         EX    1,MVC_STORGRP
***********************************************************************
* INICIA SSOB E SSIB PARA CHAMADA AO SMS SUBSYSTEM                    *
***********************************************************************
         L     15,=A(INIT_SSSA)
         BALR  14,15
         USING IEFSSSA,5
         MVI   SSSA1TYP,SSSA1SGV
         MVC   SSSA1NML,STORGRP_LENGTH
         LH    15,STORGRP_LENGTH
         BCTR  15,0
         EX    15,MVC_SSA
         MVI   SSSA1CNT+3,1
         XC    SSSA1LEN,SSSA1LEN
         XC    SSSA1PTR,SSSA1PTR
         LA    1,SMS_SSOB
         IEFSSREQ
         LTR   15,15
         BNZ   ERRO_SMS
         CLC   SSSARSN,=F'5002'
         BE    RETURN
         L     6,SSSA1PTR
         USING VLD,6
***********************************************************************
* INICIA LOOP PARA OBTENCAO DOS VOLUMES ESPECíFICOS                   *
***********************************************************************
         L     7,VLDPLEN
         L     9,VLDPCNT
         LA    5,VLDEF
         L     8,VOLUME_ADDR
         USING VOLUME_DSECT,8
         LH    15,VOLUME_CNT
         MH    15,=H'7'
         LA    8,0(15,8)
LOOP_ADDVOL EQU *
         MVI   VOLUME_LENGTH,X'05'
         MVC   VOLUME_NAME,2(5)
         LA    8,7(8)
         AR    5,7
         BCT   9,LOOP_ADDVOL
         LH    15,VOLUME_CNT
         L     9,VLDPCNT
         AR    15,9
         STH   15,VOLUME_CNT
         CLI   BYTE,C')'
         BE    RETURN
         LA    10,1(3)
         B     CLI_STORGRP
***********************************************************************
* TRATA ERRO NO SMS                                                   *
***********************************************************************
ERRO_SMS EQU   *
         MVC   WTOE+50(8),STORGRP_NAME
WTOE     WTO   'IEB0987E - ACCESS ERROR ON SMS TO STORGRP(XXXXXXXX)'
         LA    15,8
         B     RETURNE
***********************************************************************
* RETORNA AO PROGRAMA PRINCIPAL                                       *
***********************************************************************
RETURN   EQU   *
         XR    15,15
RETURNE  EQU   *
         L     1,PARM_ADDR
         LM    4,6,0(1)
         MVC   0(2,5),VOLUME_CNT
         L     13,SA+4
         L     14,12(13)
         LM    0,12,20(13)
         BSM   0,14
MVC_SSA     MVC SSSA1NAM(0),STORGRP_NAME
MVC_STORGRP MVC STORGRP_NAME(0),0(10)
***********************************************************************
* ROTINA PARA INICIALIZACAO DA SSSA PARA CHAMADA AO SMS SSI           *
***********************************************************************
INIT_SSSA EQU  *
         STM   14,15,SALVA14
         L     4,SMS_SSOB
         USING SSOB,4
         XC    SSOB_WRK,SSOB_WRK
         MVI   SSOBLEN+1,SSOBHSIZ
         MVC   SSOBID,=C'SSOB'
         MVI   SSOBFUNC+1,SSOBSSMS
         L     1,CVTPTR
         L     1,CVTJESCT-CVTMAP(1)
         L     1,JESCTEXT-JESCT(1)
         MVC   SSOBSSIB,JESSMSIB-JESPEXT(1)
         LA    5,SSSA_WRK
         ST    5,SSOBINDV
         LA    0,SSSALN+SSSA1LN
         STH   0,SSSALEN
         MVC   SSSAID,=C'SSSA'
         MVI   SSSAVER+1,SSOBSSVR
         MVI   SSSASFN+1,SSSAACTV
         MVI   SSSAIFLG,SSSANAUT
         MVI   SSSA1CNT+3,1
         LM    14,15,SALVA14
         BR    14
         LTORG
***********************************************************************
* DEFINE AREAS DE MEMORIA NECESSARIAS AO PROGRAMA                     *
***********************************************************************
SA           DS 18F
SALVA14      DS 2F
PARM_ADDR    DS F
SYSIN_ADDR   DS F
VOLUME_ADDR  DS F
VOLUME_CNT   DS H
BYTE         DS X
STORGRP_NAME DS CL8
STORGRP_LENGTH DS H
TAB_TRT  DC    256X'00'
         ORG   TAB_TRT+C')'
         DC    C')'
         ORG   TAB_TRT+C','
         DC    C','
         ORG
***********************************************************************
* AREA DE RETORNO PARA O SMS APONTADA PELA SMS_SSOB                   *
***********************************************************************
SMS_SSOB DC    A(SSOB_SMS+X'80000000')
SSOB_SMS DS    0F
SSOB_WRK DC    (SSOBHSIZ)X'00'
SSIB_SMS DS    0F
         DC    (SSIBSIZE)X'00'
SSSA_WRK DS    XL(SSSALN+SSSA1LN)
***********************************************************************
* DEFINE MAPEAMENTO PARA ARRAY DE VOLUMES                             *
***********************************************************************
VOLUME_DSECT  DSECT
VOLUME_LENGTH DS    XL1
VOLUME_NAME   DS    CL6
         IEFSSSA                       SSOB EXTENSION FOR SMS
         IGDVLD
         IEFSSOBH
         IEFJSSIB
         IEFJESCT
         CVT  DSECT=YES
         END  STGFIND
***********************************************************************
* CONTROL SECTION TO DEFINE MESSAGES                                  *
***********************************************************************
PUTMSG   CSECT
PUTMSG   AMODE 31
PUTMSG   RMODE 24
IEB001E  DC    CL133' IEB001E - FOUND INVALID XXXXX KEYWORD'
IEB002E  DC    CL133' IEB002E - DYNAMIC ALLOCATION ERROR - XXXXX VOLUMEX
                XXXXXX'
IEB003W  DC    CL133' IEB003W - NO VOLUMES MATCH SELECT CRITERIA'
IEB004E  DC    CL133' IEB004E - ERROR ON VTOC READ ACCESS FOR PROCESSEDX
               VOLUME'
IEB005E  DC    CL133' IEB005E - MODEL NOT FOUND FOR UCB VOLUME'
IEB006I  DC    CL133' IEB006I - PROCESS COMPLETED, MAXIMUM RETURN CODE X
               WAS: XXX'
IEB007E  DC    CL133' IEB007E - BLANK CONTROL CARD FOUND IS INVALID'
IEB008I  DC    CL133' IEB008I - VOLUME XXXXXX SUCCESSFULLY PROCESSED'
IEB009I  DC    CL133' IEB009I - VOLUME XXXXXX DYNAMIC ALLOCATED ON UCB X
               ADDRESS    (XXXX)'
IEB010E  DC    CL133' IEB010E - MOUNT ATTIBUTED  FOR VOL  XXXXXX CAN NOX
               T BE IDENTIFIED'
IEB110E  DC    CL133' IEB110E - VVDS XXX ERROR ON ACCESS FOR VOLUME XXXX
               XXX'
IEB111E  DC    CL133' IEB111E - FOUND A VSAM DATA SET ON VOLUME -  XXXXX
               XX BUT VVDS CAN NOT BE PROCESSED'
CABECA1  DC    CL133'1DASD SPACE REPORT'
CABECA2  DC    CL133' DATE - DD/MM/AAAA   TIME - HH.MM.SS      PROGRAM X
                IEBLIST                                  PAG -     '
CABECA3  DC    CL133' --------------- DATA SET NAME -------------- VOLUX
               ME -CRE DATE- -REF DATE- CAT SMS EXT DSORG RECFM  LRECL X
               BLKSZ TRACKS  USED'
CABECA4  DC    CL133' TOTALS FOR VOLUME  XXXXXX TYPE - XXXX'
CABECA5  DC    CL133'  -DSN- --PS- --PO- --IS- --DA- --VS- --UN- TRACKSX
                USED- FREE--SPACE'
CABECA6  DC    CL133' TOTAL DASD SPACE COLLECTED'
CABECA7  DC    CL133' SCAN OF   XXXXXX VOLUMES AND PROCESSED XXXXXX VOLX
               UMES'
CABECA8  DC    CL133' '
CABECA9  DC    CL133' DATA SETS RESUME'
CABECA10 DC    CL133'  --DSN-- ---PS-- ---PO-- ---IS-- ---DA-- ---VS-- X
               ---UN-- TRACKS A- TRACKS U- -FREE-SPACE-CYL/TRK'
IEB011E  DC    CL133' IEB011E - INITIAL SCAN ERROR TO VOLUMES TO PROCESX
               S'
IEB012E  DC    CL133' IEB012E - ERROR DURING ALL FREE SPACE OBTAIN ON  X
               VOLUME XXXXXX'
IEB013E  DC    CL133' IEB013E - VTOC OF VOLUME XXXXXX NOT INDEXED'
IEB014I  DC    CL133' IEB014I - A TOTAL OF  XXXXXX DATA SET ON VOLUME XX
               XXXXX'
IEB025E  DC    CL133' IEB025E - VVDS READ IS NOT POSSIBLE BECAUSE IEBLIX
               ST NOT AUTHORIZED'
IEB026E  DC    CL133' IEB026I - IEBLIST IS RUNNING AUTHORIZED'
IEB010I  DC    CL133' IEB010I - VVDS ON VOLUME XXXXXX CAN NOT BE ALLOCAX
               TED'
IEB112E  DC    CL133' IEB112E - ERRON ON SEEK TO READ A FORMAT 3 TO VOLX
               UME XXXXXX'
IEB113E  DC    CL133' IEB113E - ERROR ON ACCES TO FORMAT 3 ON VOLUME XXX
               XXXX'
IEB114E  DC    CL133' IEB114E - VTOC DD STATEMENT MISSING FOR VOLUME XXX
               XXXX'
IEB115E  DC    CL133' IEB115E - ERROR FROM CVAFXXX - R15=YYY CVSTAT=ZZZX
               '
         END   PUTMSG
