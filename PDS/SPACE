SPACE    CSECT
SPACE    AMODE 31
SPACE    RMODE 24
         PRINT NOGEN
         SAVE  (14,12)
         LR    11,15
         USING SPACE,11,12
         LA    12,1
         LA    12,4095(11,12)
         LA    2,SA
         ST    13,SA+4
         ST    2,8(13)
         LR    13,2
***********************************************************************
* TRATA OS SUBCOMANDOS PASSADOS PELO TMP                              *
***********************************************************************
         LR    9,1
         ST    9,CPPL_PTR
         USING CPPL,9
         LA    2,DYN_CSPL
         ST    2,CSPL_PTR
         USING CSPL,2
         MVC   CSPLCBUF,CPPLCBUF
         LA    4,OUT_AREA
         ST    4,CSPLOA
         MVC   CSPLUPT,CPPLUPT
         MVC   CSPLECT,CPPLECT
         LA    4,ECB
         ST    4,CSPLECB
         LA    4,FLAGWORD
         ST    4,CSPLFLG
         XC    ECB,ECB
         CALLTSSR EP=IKJSCAN,MF=(E,CSPL)
         L     2,CPPLCBUF
***********************************************************************
* CARREGA OS PROGRAMAS PARA NTERFACE ISPF                             *
***********************************************************************
         LOAD EP=ISPEXEC
         ST   0,ISPEXEC@
         LOAD EP=ISPLINK
         ST   0,ISPLINK@
         LOAD EP=SPACEDS
         ST   0,SPACEDS@
***********************************************************************
* GERA AS VARIAVEIS PARA O ISPF                                       *
***********************************************************************
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST0,ZCMD,TYPE,LEN20),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST1,PVOL,TYPE,LEN6),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST2,PUNIT,TYPE,LEN4),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST3,PADDR,TYPE,LEN4),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST4,PCFREE,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST5,PTFREE,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST6,PLCFREE,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST7,PLTFREE,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST8,PCTOT,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST9,PCTFREE,TYPE,LEN3),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST10,PFRAGI,TYPE,LEN3),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST11,PEXTNS,TYPE,LEN3),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST12,PMNTT,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST13,POPT,TYPE,LEN1),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST14,PSTORGRP,TYPE,LEN8),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST15,PSTSTG,TYPE,LEN2),VL
*/*******************************************************************/*
*/* CRIA TABELA PARA MOSTRAR O RESULTADO DA PESQUISA                */*
*/*******************************************************************/*
CRIA_TAB EQU   *
         L     15,ISPEXEC@
         CALL  (15),(BUFL3,BUF3),VL
         LTR   15,15
         BZ    VER_PARM
         L     15,ISPEXEC@
         CALL  (15),(BUFL6,BUF6),VL
         B     CRIA_TAB
***********************************************************************
* TRATA O PARAMETRO PASSADO                                           *
***********************************************************************
VER_PARM EQU   *
         LH    3,0(2)
         LTR   3,3
         BZ    ENDPARM
         LH    9,2(2)
         LA    9,4(2,9)
         CLI   0(9),C' '
         BE    ENDPARM
         LR    1,3
         SH    1,=H'5'
         EX    1,UPPER_CASE
         B     CLI
UPPER_CASE OC  0(0,9),=50X'40'
***********************************************************************
* COMPARA O QUE FOI PASSADO POR PARM COM O ACEITAVEL                  *
***********************************************************************
CLI      EQU   *
         CLC   0(3,9),=CL3'ALL'
         BE    ENDPARM
         CLC   0(4,9),=CL4'VOL('
         BE    #VOL
         CLC   0(4,9),=CL4'ADD('
         BE    #ADD
         CLC   0(4,9),=CL4'MNT('
         BE    #MNT
         CLC   0(5,9),=CL5'UNIT('
         BE    #UNIT
         CLC   0(3,9),=CL3'SG('
         BE    #SG
         CLI   0(9),C','
         BNE   ERRO_PARM
         LA    9,1(9)
         B     CLI
ERRO_PARM EQU  *
         MVC   WTO001E+30(8),0(9)
WTO001E  WTO   'SPACE001E - PARAMETRO XXXXXXXX PASSADO ESTA INVALIDO'
         B     END_PROGRAM
END_CLI  EQU   *
         CR    9,3
         BNL   ENDPARM
         B     CLI
***********************************************************************
* TRATA A SELECAO POR STORAGE GROUP                                   *
***********************************************************************
#SG      EQU   *
         OI    FLAG,X'40'
         LA    9,3(9)
         XR    15,15
         LA    8,STOR_GROUP_NAME
         BLANK STOR_GROUP_NAME
***********************************************************************
* OBTEM TAMANHO E NOME DO STORAGE GROUP SOLICITADO                    *
***********************************************************************
CLC_STORGRP EQU *
         CLI   0(9),C','
         BE    END_STORGRP
         CLI   0(9),C')'
         BE    END_STORGRP
         MVC   0(1,8),0(9)
         LA    9,1(9)
         LA    8,1(8)
         LA    15,1(15)
         B     CLC_STORGRP
***********************************************************************
* INICIA SSOB E SSIB PARA CHAMADA AO SMS SUBSYSTEM                    *
***********************************************************************
END_STORGRP EQU *
         STH    15,STOR_GROUP_LENGTH
         PERFORM INIT_SSSA
         USING IEFSSSA,5
         MVI   SSSA1TYP,SSSA1SGV
         MVC   SSSA1NML,STOR_GROUP_LENGTH
         BCTR  15,0
         EX    15,MVCSSA
         MVI   SSSA1CNT+3,1
         XC    SSSA1LEN,SSSA1LEN
         XC    SSSA1PTR,SSSA1PTR
         LA    1,SMS_SSOB
         IEFSSREQ
         LTR   15,15
         BNZ   DISPLAY_TAB
         CLC   SSSARSN,=F'5002'
         BE    STOR_GROUP_NOTFOUND
         L     6,SSSA1PTR
         USING VLD,6
***********************************************************************
* INICIA LOOP PARA OBTENCAO DOS VOLUMES ESPECÃ­FICOS                   *
***********************************************************************
         L     7,VLDPLEN
         L     9,VLDPCNT
         LA    8,VLDEF
         ST    9,STOR_COUNT
         LR    1,9
         MH    1,=H'7'
         ST    1,STOR_LENGTH
         STORAGE OBTAIN,LENGTH=STOR_LENGTH
         ST    1,STOR_ADDR
LOOP_ADDVOL EQU *
         MVI   0(1),X'05'
         MVC   1(6,1),2(8)
         LA    1,7(1)
         AR    8,7
         BCT   9,LOOP_ADDVOL
         OI    FLAG,X'04'
         B     ENDPARM
MVCSSA   MVC   SSSA1NAM(0),STOR_GROUP_NAME
***********************************************************************
* TRATA A SELECAO POR TIPO DE MOUNT DO VOLUME                         *
***********************************************************************
#UNIT    EQU   *
         OI    FLAG,X'01'
         LA    9,5(9)
         CLC   0(4,9),=CL4'3390'
         BE    UNIT_VALIDO
         CLC   0(4,9),=CL4'3380'
         BE    UNIT_VALIDO
         CLC   0(4,9),=CL4'9345'
         BE    UNIT_VALIDO
         CLC   0(4,9),=CL4'3375'
         BE    UNIT_VALIDO
         MVC   WTO004E+25(4),0(9)
WTO004E  WTO   'SPACE004E - UNIT XXXX NAO EH VALIDO'
         B     END_PROGRAM
UNIT_VALIDO EQU *
         MVC   TIPO_UNIT,0(9)
         LA    9,5(9)
         B     END_CLI
***********************************************************************
* TRATA A SELECAO POR TIPO DE MOUNT DO VOLUME                         *
***********************************************************************
#MNT     EQU   *
         OI    FLAG,X'02'
         LA    9,4(9)
         CLC   0(3,9),=CL3'PRV'
         BE    MOUNT_VALIDO
         CLC   0(3,9),=CL3'STG'
         BE    MOUNT_VALIDO
         CLC   0(3,9),=CL3'PUB'
         BE    MOUNT_VALIDO
WTO003E  WTO   'SPACE003E - TIPO DE MOUNT SOLICITADO NAO E VALIDO'
         B     END_PROGRAM
MOUNT_VALIDO EQU *
         MVC   TIPO_MOUNT,0(9)
         LA    9,4(9)
         B     END_CLI
***********************************************************************
* TRATA A SELECAO POR ENDERECO DE VOLUMES                             *
***********************************************************************
#ADD     EQU   *
         OI    FLAG,X'08'
         LA    9,4(9)
         LA    1,LOW_ADDR
         BLANK LOW_ADDR
         BLANK HI_ADDR
MVC_ADDR EQU *
         CLI   0(9),C')'
         BE    ENDADD
         CLI   0(9),C'-'
         BE    END_LOW
         MVC   0(1,1),0(9)
         LA    9,1(9)
         LA    1,1(1)
         B     MVC_ADDR
END_LOW  EQU   *
         LA    1,HI_ADDR
         LA    9,1(9)
         B     MVC_ADDR
ENDADD   EQU   *
         LA    9,1(9)
         CLC   HI_ADDR,=CL4' '
         BNE   *+10
         MVC   HI_ADDR,LOW_ADDR
         TR    HI_ADDR,TABMASK
         TR    LOW_ADDR,TABMASK
         B     END_CLI
***********************************************************************
* TRATA A SELECAO DE VOLUMES PARA PROCESSAMENTO                       *
***********************************************************************
#VOL     EQU   *
         LA    9,4(9)
VALIDA_VOLUME EQU *
         XR    15,15
         BLANK VOLUME_NAME
         LA    8,VOLUME_NAME
         PERFORM VERIFICA_SELECT_SMS
CLC_END_VOLUME EQU *
         CLI   0(9),C','
         BE    NEXT_VOLUME
         CLI   0(9),C')'
         BE    END_VOLUME
         CLI   0(9),C' '
         BE    END_VOLUME
         MVC   0(1,8),0(9)
         LA    15,1(15)
         LA    9,1(9)
         LA    8,1(8)
         B     CLC_END_VOLUME
NEXT_VOLUME EQU *
         LA    9,1(9)
         LTR   15,15
         BZ    VALIDA_VOLUME
         PERFORM ADD_VOLUME
         B     VALIDA_VOLUME
END_VOLUME EQU *
         LA    9,1(9)
         LTR   15,15
         BZ    END_CLI
         PERFORM ADD_VOLUME
         B     END_CLI
ADD_VOLUME EQU *
         OI    FLAG,X'04'
         BCTR  15,0
         STCM  15,1,VOLUME_LENGTH
         LA    8,VOLUME_STACK
         XR    15,15
         ICM   15,1,VOLUME_CNT
         MH    15,=H'7'
         LA    8,0(8,15)
         MVC   0(7,8),VOLUME
         LA    15,1(15)
         STCM  15,1,VOLUME_CNT
         BLANK VOLUME
         BR    10
***********************************************************************
* ROTINA PARA INICIALIZACAO DA SSSA PARA CHAMADA AO SMS SSI           *
***********************************************************************
INIT_SSSA EQU  *
         L     4,SMS_SSOB
         USING SSOB,4
         XC    SSOB_WRK,SSOB_WRK
         MVI   SSOBLEN+1,SSOBHSIZ
         MVC   SSOBID,=C'SSOB'
         MVI   SSOBFUNC+1,SSOBSSMS
         L     1,CVTPTR
         L     1,CVTJESCT-CVTMAP(1)
         L     1,JESCTEXT-JESCT(1)
         MVC   SSOBSSIB,JESSMSIB-JESPEXT(1)
         LA    5,SSSA_WRK
         ST    5,SSOBINDV
         LA    0,SSSALN+SSSA1LN
         STH   0,SSSALEN
         MVC   SSSAID,=C'SSSA'
         MVI   SSSAVER+1,SSOBSSVR
         MVI   SSSASFN+1,SSSAACTV
         MVI   SSSAIFLG,SSSANAUT
         MVI   SSSA1CNT+3,1
         BR    10
***********************************************************************
* TRATA A SELECAO DE VOLUMES PARA PROCESSAMENTO                       *
***********************************************************************
VERIFICA_SELECT_SMS EQU *
         CLC   0(5,9),=CL5'*SMS*'
         BE    VALIDA_SMS
         CLC   0(7,9),=CL7'*NOSMS*'
         BE    VALIDA_NOSMS
         BR    10
VALIDA_SMS EQU *
         LA    9,5(9)
         OI    FLAG,X'10'
         BR    10
VALIDA_NOSMS EQU *
         LA    9,7(9)
         OI    FLAG,X'20'
         BR    10
***********************************************************************
* PESQUISA NA TABELA DE UCB O VOLUME                                  *
***********************************************************************
ENDPARM  EQU   *
         XC    AREA,AREA
PESQUCB  EQU   *
         UCBSCAN COPY,                                                 X
               WORKAREA=AREA,                                          X
               UCBAREA=UCBAREA,                                        X
               DEVCLASS=DASD,                                          X
               RANGE=ALL,                                              X
               DYNAMIC=YES
         LTR   15,15
         BNZ   DISPLAY
         LA    8,UCBAREA
         USING UCBMAP,8
***********************************************************************
* VERIFICA SE O VOLUME ENCONTRA-SE ONLINE                             *
***********************************************************************
         TM    UCBSTAT,X'80'
         BNO   PESQUCB
***********************************************************************
* TESTA SE FOI FEITA SELECAO POR NOME DE VOLUME                       *
***********************************************************************
         TM    FLAG,X'04'
         BNO   NEXT
***********************************************************************
* LOOP DE COMPARACAO COM O NOME DO VOLUME INFORMADO                   *
***********************************************************************
         TM    FLAG,X'40'
         BNO   NO_STOR_GROUP
         L     1,STOR_ADDR
         L     15,STOR_COUNT
         B     CLC_VOLUME
NO_STOR_GROUP EQU *
         ICM   15,1,VOLUME_CNT
         LA    1,VOLUME_STACK
CLC_VOLUME EQU *
         XR    2,2
         ICM   2,1,0(1)
         EX    2,CLCVOL
         BE    NEXT
         LA    1,7(1)
         BCT   15,CLC_VOLUME
         B     PESQUCB
CLCVOL   CLC   1(0,1),UCBVOLI
***********************************************************************
* VALIDA OS TIPOS DE VOLUMES POSSIVEIS AO PROCESSAMENTO               *
***********************************************************************
NEXT     EQU   *
         MVC   NOME_VOLUME,UCBVOLI
         TM    UCBTYP+3,X'04'
         BNO   *+10
         MVC   UNIT_VOLUME,=CL4'9345'
         TM    UCBTYP+3,X'0D'
         BNO   *+10
         MVC   UNIT_VOLUME,=CL4'3375'
         TM    UCBTYP+3,X'0E'
         BNO   *+10
         MVC   UNIT_VOLUME,=CL4'3380'
         TM    UCBTYP+3,X'0F'
         BNO   *+10
         MVC   UNIT_VOLUME,=CL4'3390'
         TM    FLAG,X'01'
         BNO   VER_MOUNT
         CLC   TIPO_UNIT,UNIT_VOLUME
         BNE   PESQUCB
***********************************************************************
* VERIFICA O ATRIBUTO DE MONTAGEM DO VOLUME                           *
***********************************************************************
VER_MOUNT EQU  *
         TM    UCBSTAB,X'10'
         BNO   *+10
         MVC   MOUNT_VOLUME,=CL5'PRV'
         TM    UCBSTAB,X'08'
         BNO   *+10
         MVC   MOUNT_VOLUME,=CL5'PUB'
         TM    UCBSTAB,X'04'
         BNO   *+10
         MVC   MOUNT_VOLUME,=CL5'STG'
         TM    FLAG,X'02'
         BNO   TESTA_ADDR
         CLC   TIPO_MOUNT,MOUNT_VOLUME
         BNE   PESQUCB
***********************************************************************
* PEGA O ENDERECO DO VOLUME COM 4 DIGITOS E COMPARA COM O INFORMADO   *
***********************************************************************
TESTA_ADDR EQU *
         ST    8,SALVA8
         UCBDEVN DEVN=FULL,UCBPTR=SALVA8
         MVC   ADDR_VOLUME,FULL
         TM    FLAG,X'08'
         BNO   LSPACE
         TR    FULL,TABMASK
         CLC   FULL,LOW_ADDR
         BL    PESQUCB
         CLC   FULL,HI_ADDR
         BH    PESQUCB
***********************************************************************
* OBTEM O ESPACO DISPONIVEL NO VOLUME PROCESSADO                      *
***********************************************************************
LSPACE   EQU   *
         OBTAIN SEARCH
         LTR   15,15
         BNZ   ERRO_OBTAIN
***********************************************************************
* VERIFICA SE O VOLUME E SMS E OBTEM O STORAGE GROUP                  *
***********************************************************************
SEARCH_STOR_GROUP EQU *
         TM    DSCB4+16,X'C0'
         BNO   VOLUME_NO_SMS
         TM    FLAG,X'20'
         BO    PESQUCB
         PERFORM INIT_SSSA
         USING IEFSSSA,5
         MVI   SSSA1TYP,SSSA1VOL       GIVE VOLSER, GET VLD BACK
         MVI   SSSA1NML+1,6
         MVC   SSSA1NAM(6),NOME_VOLUME
         LA    0,SMS_VLD_LEN
         ST    0,SSSA1LEN             LENGTH OF WORK AREA
         LA    6,SMS_VLD
         ST    6,SSSA1PTR             ADDR OF WORK AREA
         USING VLD,6
         LA    1,SMS_SSOB             SSOB_PTR
         IEFSSREQ                  <== CALL SMS
         LTR   15,15                 SSI OK?
         BNZ   VOLUME_NO_SMS           NO, JUMP
         ICM   15,B'1111',SSOBRETN-SSOB+SSOB_SMS
         BNZ   VOLUME_NO_SMS           BAD, JUMP
         MVC   PSTORGRP,VLDSTGRP        STORAGE GROUP LENGTH
***********************************************************************
* OBTEM O ESTADO DO VOLUME NO STORAGE GROUP                           *
***********************************************************************
         ST    8,SALVA8
         LA    8,VLDEF
         A     8,VLDSYSOF
         USING VLDSYSDT,8
         TM    VLDSTSMS,VLDDISN
         BO    VOLUME_DISABLE_NEW
         TM    VLDSTSMS,VLDDIS
         BO    VOLUME_DISABLE
         TM    VLDSTSMS,VLDQUIN
         BO    VOLUME_QUIESCE_NEW
         TM    VLDSTSMS,VLDQUI
         BO    VOLUME_QUIESCE
         TM    VLDSTSMS,VLDENBL
         BO    VOLUME_ENABLE
         B     OK_SMS
***********************************************************************
* MOVE VALOR OBTIDO DO VOLUME NO STORAGE GROUP PARA O PAINEL          *
***********************************************************************
VOLUME_ENABLE EQU *
         MVC   PSTSTG,=CL2'E '
         B     OK_SMS
VOLUME_QUIESCE EQU *
         MVC   PSTSTG,=CL2'Q '
         B     OK_SMS
VOLUME_QUIESCE_NEW EQU *
         MVC   PSTSTG,=CL2'QN'
         B     OK_SMS
VOLUME_DISABLE EQU *
         MVC   PSTSTG,=CL2'D '
         B     OK_SMS
VOLUME_DISABLE_NEW EQU *
         MVC   PSTSTG,=CL2'DN'
         B     OK_SMS
VOLUME_NO_SMS EQU *
         MVC   PSTSTG,=CL2' '
         TM    FLAG,X'10'
         BO    PESQUCB
         BLANK PSTORGRP
***********************************************************************
* TRATA VALORES RELACIONADOS COM O ESPACO DO VOLUME                   *
***********************************************************************
OK_SMS   EQU   *
         L     8,SALVA8
         XR    15,15
         ICM   15,3,DSCB4+18
         CVD   15,DOUBLE
         SP    DOUBLE,=P'1'
         MVC   TOT_CYL_VOLUME,MASK5
         ED    TOT_CYL_VOLUME,DOUBLE+5
         LSPACE UCB=(8),DATA=LSPTEXT
         LTR   15,15
         BNZ   ERRO_LSPACE
         XR    15,15
         ICM   15,15,LSPDNEXT
         CVD   15,DOUBLE
         MVC   FREE_EXT_VOLUME,MASK5
         ED    FREE_EXT_VOLUME,DOUBLE+5
         XR    15,15
         ICM   15,15,LSPDTCYL
         CVD   15,DOUBLE
         MVC   FREE_CYL_VOLUME,MASK5
         ED    FREE_CYL_VOLUME,DOUBLE+5
         XR    15,15
         ICM   15,15,LSPDTTRK
         CVD   15,DOUBLE
         MVC   FREE_TRK_VOLUME,MASK5
         ED    FREE_TRK_VOLUME,DOUBLE+5
         XR    15,15
         ICM   15,15,LSPDLCYL
         CVD   15,DOUBLE
         MVC   LARG_CYL_VOLUME,MASK5
         ED    LARG_CYL_VOLUME,DOUBLE+5
         XR    15,15
         ICM   15,15,LSPDLTRK
         CVD   15,DOUBLE
         MVC   LARG_TRK_VOLUME,MASK5
         ED    LARG_TRK_VOLUME,DOUBLE+5
         XR    15,15
         ICM   15,15,LSPDFRAG
         CVD   15,DOUBLE
         MVC   FRAG_IND_VOLUME,MASK5
         ED    FRAG_IND_VOLUME,DOUBLE+5
         PERFORM TAB_ADD
         B     PESQUCB
TAB_ADD  EQU   *
         MVC   PVOL,NOME_VOLUME
         MVC   PUNIT,UNIT_VOLUME
         MVC   PADDR,ADDR_VOLUME
         MVC   PMNTT,MOUNT_VOLUME
         MVC   PCTOT,TOT_CYL_VOLUME+1
         MVC   PCFREE,FREE_CYL_VOLUME+1
         MVC   PTFREE,FREE_TRK_VOLUME+1
         MVC   PLCFREE,LARG_CYL_VOLUME+1
         MVC   PLTFREE,LARG_TRK_VOLUME+1
         MVC   PFRAGI,FRAG_IND_VOLUME+3
         MVC   PEXTNS,FREE_EXT_VOLUME+3
         PACK  DIVIDE,FREE_CYL_VOLUME+1(5)
         PACK  DIVISOR,TOT_CYL_VOLUME+1(5)
         MP    DIVIDE,=P'100'
         DP    DIVIDE,DIVISOR
         MVC   FREE_PCT_VOLUME,MASK3
         ED    FREE_PCT_VOLUME,DIVIDE
         MVC   PCTFREE,FREE_PCT_VOLUME+1
         L     15,ISPEXEC@
         CALL  (15),(BUFL4,BUF4),VL
         BR    10
***********************************************************************
* VERIFICA SE TEM STORAGE A SER LIBERADA                              *
***********************************************************************
DISPLAY  EQU   *
         TM    FLAG,X'40'
         BNO   DISPLAY_TAB
         L     1,STOR_ADDR
         STORAGE RELEASE,LENGTH=STOR_LENGTH,ADDR=(1)
         B     DISPLAY_TAB
***********************************************************************
* TRATA STORAGE GROUP NAO ENCONTRADO                                  *
***********************************************************************
STOR_GROUP_NOTFOUND EQU *
***********************************************************************
* MOSTRA O PAINEL COM O RESULTADO OBTIDO                              *
***********************************************************************
DISPLAY_TAB EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL7,BUF7),VL
DISPLAY_TAB_001 EQU *
         MVI   POPT,C' '
         BLANK PUNIT
         BLANK PVOL
         L     15,ISPEXEC@
         CALL  (15),(BUFL8,BUF8),VL
         LTR   15,15
         BNZ   END_PROGRAM
         CLI   POPT,C'S'
         BE    LINK_SPACEDS
         LA    3,ZCMD
***********************************************************************
* TRATA COMANDO DE CLASSIFICACAO DA TABELA ISPF                       *
***********************************************************************
CLC_ZCMD EQU   *
         CLC   0(4,3),=CL4'SORT'
         BNE   DISPLAY_TAB_001
         LA    3,5(3)
         CLC   0(2,3),=CL2' '
         BNE   *+14
         ZAP   DOUBLE,=P'1'
         B     SORT_COL
         CLI   1(3),C' '
         BNE   *+14
         PACK  DOUBLE,0(1,3)
         B     SORT_COL
         PACK  DOUBLE,0(2,3)
SORT_COL EQU   *
         LA    4,LIST1
         CP    DOUBLE,=P'13'
         BH    DISPLAY_TAB_001
         CVB   5,DOUBLE
         BCTR  5,0
         MH    5,=H'8'
         AR    4,5
         MVC   BUF1+22(8),0(4)
         L     15,ISPEXEC@
         CALL  (15),(BUFL1,BUF1),VL
         B     DISPLAY_TAB
SEARCH   CAMLST SEARCH,F4DSCB,NOME_VOLUME,DSCB4
ERRO_LSPACE EQU *
         MVC   WTO_LSPACE+49(6),NOME_VOLUME
WTO_LSPACE WTO   'SPACE002E - ERRO NA LSPACE PARA O VOLUME XXXXXX'
         B     PESQUCB
ERRO_OBTAIN EQU *
         MVC   WTO_OBTAIN+53(6),NOME_VOLUME
WTO_OBTAIN WTO   'SPACE003E - ERRO NO READ DA F4DSCB DO VOLUME XXXXXX'
         B     PESQUCB
***********************************************************************
* CHAMA PROGRAMA PARA VISUALIZACAO DE VOLUME                          *
***********************************************************************
LINK_SPACEDS EQU *
         L     15,SPACEDS@
         CALL  (15),(PVOL,PUNIT),VL
         B     DISPLAY_TAB_001
***********************************************************************
* DELETA TABELA ISPF E ENCERRA O PROGRAMA                             *
***********************************************************************
END_PROGRAM EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL5,BUF5),VL
         L     15,ISPEXEC@
         CALL  (15),(BUFL6,BUF6),VL
RETURN   EQU   *
         L     15,RETCODE
         L     13,SA+4
         RETURN (14,12),RC=(15)
         LTORG
***********************************************************************
* DEFINE AREAS CONSTANTES PARA O PROGRAMA                             *
***********************************************************************
SA       DC    18F'0'
DOUBLE   DC    D'0'
FULL     DC    F'0'
SALVA8   DC    F'0'
ISPEXEC@ DS    F
ISPLINK@ DS    F
SPACEDS@ DS    F
CPPL_PTR DS    F
CSPL_PTR DS    F
DYN_CSPL DS    6F
OUT_AREA DS    2F
FLAGWORD DS    F
ECB      DS    F
RETCODE  DC    F'0'
DEBADDR  DC    F'0'
UCBADDR  DC    F'0'
DIVIDE   DS    PL5
DIVISOR  DS    PL3
MASK3    DC    X'40202120'
MASK5    DC    X'402020202120'
F4DSCB   DC    44X'04'
DSCB4    DS    CL140
LOW_ADDR DC    CL4' '
HI_ADDR  DC    CL4' '
TIPO_MOUNT DC  CL3' '
TIPO_UNIT DC  CL4' '
UCBAREA  DS    CL48
AREA     DS    CL100
STOR_GROUP_LENGTH DS H
STOR_GROUP_NAME   DS CL30
STOR_COUNT    DS F
STOR_LENGTH   DS F
STOR_ADDR     DS F
VOLUME_CNT    DS X
VOLUME_STACK  DS CL105
VOLUME        DS 0CL7
VOLUME_LENGTH DS CL1
VOLUME_NAME   DS CL6
         ORG
FLAG     DS    X
***********************************************************************
* DEFINE AREA PARA O ISPF                                             *
***********************************************************************
VDEFINE  DC    CL8'VDEFINE'
TYPE     DC    CL8'CHAR'
LIST0    DC    CL8'ZCMD'
LIST1    DC    CL8'PVOL'
LIST2    DC    CL8'PUNIT'
LIST3    DC    CL8'PADDR'
LIST12   DC    CL8'PMNTT'
LIST8    DC    CL8'PCTOT'
LIST4    DC    CL8'PCFREE'
LIST5    DC    CL8'PTFREE'
LIST11   DC    CL8'PEXTNS'
LIST6    DC    CL8'PLCFREE'
LIST7    DC    CL8'PLTFREE'
LIST9    DC    CL8'PCTFREE'
LIST10   DC    CL8'PFRAGI'
LIST14   DC    CL8'PSTORGRP'
LIST15   DC    CL8'PSTSTG'
LIST13   DC    CL8'POPT'
LEN1     DC    F'3'
LEN2     DC    F'3'
LEN3     DC    F'3'
LEN4     DC    F'4'
LEN5     DC    F'5'
LEN6     DC    F'6'
LEN8     DC    F'8'
LEN20    DC    F'20'
ZCMD     DC    CL20' '
PVOL     DC    CL6' '
PUNIT    DC    CL4' '
PADDR    DC    CL4' '
PCFREE   DC    CL5' '
PTFREE   DC    CL5' '
PLCFREE  DC    CL5' '
PLTFREE  DC    CL5' '
PCTOT    DC    CL5' '
PCTFREE  DC    CL3' '
PFRAGI   DC    CL3' '
PEXTNS   DC    CL3' '
PMNTT    DC    CL5' '
PSTORGRP DC    CL8' '
PSTSTG   DC    CL8' '
POPT     DC    CL1' '
*/*******************************************************************/*
*/* DEFINE AREAS UTILIZADAS PELO ISPF                               */*
*/*******************************************************************/*
BUFL1    DC    A(L'BUF1)
BUFL2    DC    A(L'BUF2)
BUFL3    DC    A(L'BUF3)
BUFL4    DC    A(L'BUF4)
BUFL5    DC    A(L'BUF5)
BUFL6    DC    A(L'BUF6)
BUFL7    DC    A(L'BUF7)
BUFL8    DC    A(L'BUF8)
BUFL9    DC    A(L'BUF9)
BUF1     DC    C'TBSORT TBSPACE FIELDS(        )'
BUF2     DC    C'TBOPEN TBSPACE WRITE'                                    000016
BUF3     DC    C'TBCREATE TBSPACE NAMES(PVOL,PUNIT,PADDR,PCFREE,PTFREE,X  000016
               PEXTNS,PLCFREE,PLTFREE,PCTOT,PCTFREE,PFRAGI,PMNTT,PSTORGX
               RP,PSTSTG)'
BUF4     DC    C'TBADD TBSPACE'
BUF5     DC    C'TBEND TBSPACE'
BUF6     DC    C'TBERASE TBSPACE'
BUF7     DC    C'TBTOP TBSPACE'
BUF8     DC    C'TBDISPL TBSPACE PANEL(SPACP001)'                         000016
BUF9     DC    C'TBGET TBSPACE'                                           000016
***********************************************************************
* DEFINE TABELA PARA TRATAMENTO DA MASCARA DE COMPARACAO              *
***********************************************************************
TABMASK  DC    256X'00'
         ORG   TABMASK
         DC    C'0123456789ABCDEF'
         ORG   TABMASK+C'*'
         DC    C'*'
         ORG   TABMASK+C'%'
         DC    C'%'
         ORG   TABMASK+C'/'
         DC    C'/'
         ORG   TABMASK+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TABMASK+C'0'
         DC    X'00010203040506070809'
         ORG
***********************************************************************
* DEFINE AREAS DE TRABALHO PARA OPERACOES DE CALCULO                  *
***********************************************************************
VOLUME_COUNT     DC    PL3'0'
WTOMSG   WTO   '                                                       X
                               ',MF=L
         ORG   WTOMSG+8
NOME_VOLUME     DC    CL6' '
UNIT_VOLUME     DC    CL4' '
ADDR_VOLUME     DC    CL4' '
MOUNT_VOLUME    DC    CL5' '
FREE_EXT_VOLUME DC    CL6'0'
FREE_CYL_VOLUME DC    CL6'0'
FREE_TRK_VOLUME DC    CL6'0'
FREE_PCT_VOLUME DC    CL4'0'
LARG_CYL_VOLUME DC    CL6'0'
LARG_TRK_VOLUME DC    CL6'0'
FRAG_IND_VOLUME DC    CL6'0'
TOT_CYL_VOLUME  DC    CL6'0'
         ORG
***********************************************************************
* AREA DE RETORNO DA LSPACE                                           *
***********************************************************************
LSPTEXT  DS    CL40
         ORG   LSPTEXT
LSPDRETN DS    X
LSPDSPAC EQU   X'80'
LSPDF0CN EQU   X'40'
LSPDVRCN EQU   X'20'
LSPDSTAT DS    X
LSPDIXDS EQU   X'80'
LSPDIXAC EQU   X'40'
LSPDRSV1 DS    XL2
LSPDNEXT DS    XL4
LSPDTCYL DS    XL4
LSPDTTRK DS    XL4
LSPDLCYL DS    XL4
LSPDLTRK DS    XL4
LSPDF0S  DS    XL4
LSPDVIRS DS    XL4
LSPDFRAG DS    XL4
         ORG
*************************************************** *******************
* AREA DE RETORNO PARA O SMS APONTADA PELA SMS_SSOB                   *
***********************************************************************
SMS_SSOB DC    A(SSOB_SMS+X'80000000')
SSOB_SMS DS    0F
SSOB_WRK DC    (SSOBHSIZ)X'00'
SSIB_SMS DS    0F
         DC    (SSIBSIZE)X'00'
SSSA_WRK DS    XL(SSSALN+SSSA1LN)
SMS_VLD  DS    XL((VLDEND-VLD)+(VLDEND2-VLDSYSDT))
SMS_VLD_LEN EQU *-SMS_VLD
         DSECT
         UCBMAP
         IEFSSSA                       SSOB extension for SMS
         IGDVLD
         IEFSSOBH
         IEFJSSIB
         IEFJESCT
***********************************************************************
* DEFINE AREAS DE MAPEAMENTO                                          *
***********************************************************************
         IKJCPPL                  COMMAND PROCESSOR PARAMETER LIST
LCPPL    EQU   *-CPPL             DESCRIBES LENGTH OF THE CPPL
         CVT  DSECT=YES           CVT NEEDED FOR CALLTSSR
         IKJCSPL                  COMMAND SCAN PARAMETER LIST
         IKJCSOA                  COMMAND SCAN OUTPUT AREA
         END   SPACE
