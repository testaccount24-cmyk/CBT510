SPACEDS  CSECT
SPACEDS  AMODE 31
SPACEDS  RMODE 24
         SAVE  (14,12)
         LR    11,15
         USING SPACEDS,11,12
         LA    12,1
         LA    12,4095(11,12)
         LA    2,SA
         ST    13,SA+4
         ST    2,8(13)
         LR    13,2
         LM    2,3,0(1)
         MVC   NOME_VOLUME,0(2)
         MVC   UNIT_VOLUME,0(3)
***********************************************************************
* CARREGA OS PROGRAMAS PARA USO DO ISPF                               *
***********************************************************************
         LOAD  EP=ISPEXEC
         ST    0,ISPEXEC@
         LOAD  EP=ISPLINK
         ST    0,ISPLINK@
***********************************************************************
* DEFINE AS VARIAVEIS A SEREM USADAS PELO ISPF                        *
***********************************************************************
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST0,PVOL1,TYPE,LEN6),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST1,PDSN,TYPE,LEN44),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST2,PORG,TYPE,LEN2),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST3,PALOC,TYPE,LEN5),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST4,PUSE,TYPE,LEN3),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST5,PCDATE,TYPE,LEN10),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST6,PRDATE,TYPE,LEN10),VL
         L     15,ISPLINK@
         CALL  (15),(VDEFINE,LIST7,PEXT,TYPE,LEN3),VL
         MVC   PVOL1,NOME_VOLUME
***********************************************************************
* CRIA A TABELA PARA RETORNO DOS ARQUIVOS ENCONTRADOS                 *
***********************************************************************
CRIA_TAB EQU   *
         L     15,ISPEXEC@
         CALL  (15),(BUFL2,BUF2),VL
         LTR   15,15
         BZ    ALLOC
         L     15,ISPEXEC@
         CALL  (15),(BUFL3,BUF3),VL
         LTR   15,15
         BZ    ALLOC
         L     15,ISPEXEC@
         CALL  (15),(BUFL5,BUF5),VL
         L     15,ISPEXEC@
         CALL  (15),(BUFL6,BUF6),VL
         B     CRIA_TAB
***********************************************************************
* FAZ ALOCACAO DINAMICA DO VOLUME A SER PROCESSADO                    *
***********************************************************************
ALLOC    EQU   *
         MVC   DSNVVDS+17(6),NOME_VOLUME
         MVC   VOLSER+6(6),NOME_VOLUME
         MVC   UNIT+6(4),UNIT_VOLUME
         LA    1,ALOC
         MVC   ALOCTP,=A(VTOCALOC)
         MVC   ALOCVC,=AL1(1)
         DYNALLOC
         LTR   15,15
         BNZ   END_PROGRAM
         OI    FLAG_OPEN_VTOC,X'F0'
         RDJFCB VTOC
         USING INFMJFCB,2
         LA    2,JFCBAREA
         LTR   15,15
         BNZ   END_PROGRAM
***********************************************************************
* ALOCA DINAMICAMENTE A VVDS DO VOLUME A SER PROCESSADO               *
***********************************************************************
ALOCOK   EQU   *
         LA    1,ALOC
         MVC   ALOCTP,=A(VVDSALOC)
         DYNALLOC
         LTR   15,15
         BNZ   DDOK
         OI    FLAG_OPEN_VVDS,X'F0'
***********************************************************************
* TORNA O PROGRAMA AUTORIZADO                                         *
***********************************************************************
         LA     0,1
         SVC    255
         OI     FLAG_AUTH,X'FF'
***********************************************************************
*              OPEN THE VTOC                                          *
***********************************************************************
DDOK     EQU   *
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(43),JFCBDSNM
         OI    JFCBTSDM,JFCNWRIT
         TM    FLAG_OPEN_VTOC,X'F0'
         BNO   END_PROGRAM
         OPEN  (VTOC,(INPUT)),TYPE=J
         LTR   15,15
         BNZ   END_PROGRAM
         OI    FLAG_OPEN_VTOC,X'0F'
         TM    FLAG_OPEN_VVDS,X'F0'
         BNO   GETDEB
         OPEN  (VVDS,(INPUT))
         LTR   15,15
         BNZ   GETDEB
         OI    FLAG_OPEN_VVDS,X'0F'
***********************************************************************
* LOCALIZA O ENDERECO DA UCB VIA A DEB DO VOLUME                      *
***********************************************************************
GETDEB   EQU   *
         L     1,DCBDEBAD-IHADCB+VTOC              GET A(DEB)
         ST    1,DEBADDR              SAVE DEB ADDRESS
         LA    1,DEBUCBAD-DEBDASD+DEBBASND-DEBBASIC(1) GET A(UCB)
         L     1,0(1)                LOAD UCB ADDRESS
         ST    1,UCBADDR
***********************************************************************
* INICIALIZA O BUFFER LIST HEADER E ELEMENTOS                         *
***********************************************************************
IXVTOC   EQU   *
         LA    4,CVPL
         USING CVPL$MAP,4
         MVC   CVDEB,DEBADDR
         XC    BFLH$DEF(BFL$SIZE),BFLH$DEF
         LA    1,BFLH$DEF
         USING BFL$MAP,1
         MVI   BFLHNOE,BFLE$N
         OI    BFLHFL,BFLHDSCB         CCHHR OF DSCB TO BE USED
         LA    2,BFLH$DEF+BFLHLN
         USING BFLE,2
         LA    3,DSCB$DEF
         LA    5,BFLE$N
BFLE$INT EQU   *
         OI    BFLEFL,BFLECHR
         MVI   BFLELTH,DSCB$SIZ
         ST    3,BFLEBUF
         LA    2,BFLELN(2)
         LA    3,DSCB$SIZ(3)
         BCT   5,BFLE$INT
         DROP  1,2
***********************************************************************
* INICIALIZA O CAMPO DE FILTRO PARA PESQUISA DA VTOC                  *
***********************************************************************
         XC    FCL$DEF(FCL$SIZE),FCL$DEF
         LA    1,FCL$DEF
         USING FCL$MAP,1
         MVC   FCLID,FCL$ID
         MVC   FCLCOUNT,=H'1'
         LA    2,FCLHDEND
         USING FCLDSN,2
         MVI   FCLDSNLG,X'02'
         LA    3,=C'**'
         ST    3,FCLDSNA
         DROP  1,2
***********************************************************************
* EMITE A LEITURA INICIAL NA VTOC                                     *
***********************************************************************
INITVTIX EQU   *
         NI    FLAG,X'7F'
         CVAFFILT ACCESS=READ,FCL=FCL$DEF,BUFLIST=BFLH$DEF,            X
               MF=(E,CVPL)
TEST$RET EQU   *
         LTR   15,15
         BZ    READLAST
         CH    15,=H'4'
         BNE   IXSEQERR
         CLI   CVSTAT,STAT064
         BNE   IXSEQERR
         B     READOK
***********************************************************************
* INICIALIZA A LEITURA DO BUFFER DA VTOC E COMECA A PESQUISA          *
***********************************************************************
READLAST EQU   *
         OI    FLAG,X'80'
READOK   EQU   *
         LA    2,FCL$DEF
         USING FCL$MAP,2
         XR    3,3
         ICM   3,3,FCLDSCBR
         BZ    TST$RSUM
         LA    2,DSCB$DEF
         USING DSCB$MAP,2
         OI    FLAG,X'40'
READVTIX EQU   *
         LTR   3,3                   CHECK FOR END OF DSCB'S
         BZ    TST$RSUM                EXIT IF END OF VTOC
         TM    FLAG,X'40'
         BO    *+8
         LA    2,DSCB$SIZ(2)
         NI    FLAG,X'BF'
         BCTR  3,0
         ZAP   CYL_LOW_EXTENT,=P'0'
         ZAP   CYL_HIGH_EXTENT,=P'0'
         ZAP   TRK_LOW_EXTENT,=P'0'
         ZAP   TRK_HIGH_EXTENT,=P'0'
         CLI   DS1FMTID,0              IS THIS DSCB UNUSED
         BE    READVTIX                YES - DONT COUNT IT
         CLI   DS1FMTID,C'1'           IS THIS A FORMAT 1 DSCB
         BE    FORMAT1
         CLI   DS1FMTID,C'3'
         BE    FORMAT3
         B     READVTIX
***********************************************************************
* EMITE RESUME NA CONTINUACAO DA LEITURA DA VTOC                      *
***********************************************************************
TST$RSUM EQU   *
         TM    FLAG,X'80'
         BO    IXCLOSE
         CVAFFILT ACCESS=RESUME,FCL=FCL$DEF,BUFLIST=BFLH$DEF,          X
               FLTAREA=KEEP,MF=(E,CVPL)
         B     TEST$RET
***********************************************************************
* TRATA OS CAMPOS REFERENTES A FORMAT 4 DO VOLUME                     *
***********************************************************************
FORMAT4  EQU   *
         XR    15,15
         ICM   15,3,20(2)
         CVD   15,DOUBLE
         MVC   TRK_CYL,DOUBLE+6
         B     READVTIX
***********************************************************************
* TRATA OS CAMPOS REFERENTES A FORMAT 3 DO ARQUIVO                    *
***********************************************************************
FORMAT3  EQU   *
         TM    FMT3,X'FF'
         BNO   READVTIX
         NI    FMT3,X'00'
         LA    5,4(2)
         XR    6,6
         ICM   6,1,EXTNTS
         LTR   6,6
         BZ    READVTIX
         CH    6,=H'4'
         BH    ADDFMT3X
         BAL   14,ADDCYL
         B     PRINTL
ADDFMT3X EQU   *
         SH    6,=H'4'
         STCM  6,1,EXTNTS
         LA    6,4
         BAL   14,ADDCYL
         LA    5,45(2)
         XR    6,6
         ICM   6,1,EXTNTS
         CH    6,=H'9'
         BH    ADDFMT31
         BAL   14,ADDCYL
         B     PRINTL
ADDFMT31 EQU   *
         SH    6,=H'9'
         STCM  6,1,EXTNTS
         LA    6,9
         BAL   14,ADDCYL
         B     READVTIX
***********************************************************************
* TRATA OS CAMPOS REFERENTES A FORMAT 1 DO ARQUIVO                    *
***********************************************************************
FORMAT1  EQU   *
         ZAP   TRK_ALOC_EXTENT,=P'0'
         MVC   PDSN,DS1DSNAM
***********************************************************************
* PROCESSA OS EXTENTS DO ARQUIVO                                      *
***********************************************************************
         MVC   EXTNTS,DS1NOEPV
         XR    15,15
         ICM   15,1,EXTNTS
         CVD   15,DOUBLE
         LA    1,PEXT
         BCTR  1,0
         MVC   0(4,1),MASK3
         ED    0(4,1),DOUBLE+6
***********************************************************************
* PROCESSA AS DATAS DE CRIACAO E REFERENCIA                           *
***********************************************************************
         XR    15,15
         ICM   15,1,DS1CREDT
         CVD   15,DOUBLE
         AP    DOUBLE,=P'1900'
         UNPK  JULGRIN(5),DOUBLE+5(3)
         OI    JULGRIN+4,X'F0'
         XR    15,15
         ICM   15,3,DS1CREDT+1
         CVD   15,DOUBLE
         UNPK  JULGRIN+5(3),DOUBLE+6(2)
         OI    JULGRIN+7,X'F0'
         JULGREG JULGRIN+1,JULGROUT,DOUBLE
         MVC   PCDATE(2),JULGROUT
         MVC   PCDATE+3(2),JULGROUT+2
         MVC   PCDATE+6(4),JULGROUT+4
         XR    15,15
         ICM   15,1,DS1REFD
         CVD   15,DOUBLE
         AP    DOUBLE,=P'1900'
         UNPK  JULGRIN(5),DOUBLE+5(3)
         OI    JULGRIN+4,X'F0'
         XR    15,15
         ICM   15,3,DS1REFD+1
         CVD   15,DOUBLE
         UNPK  JULGRIN+5(3),DOUBLE+6(2)
         OI    JULGRIN+7,X'F0'
         JULGREG JULGRIN+1,JULGROUT,DOUBLE
         MVC   PRDATE(2),JULGROUT
         MVC   PRDATE+3(2),JULGROUT+2
         MVC   PRDATE+6(4),JULGROUT+4
***********************************************************************
* VERIFICA O TIPO DE ARQUIVO QUE ESTA SENDO TRATADO                   *
***********************************************************************
         MVC   PORG,=CL2'UN'
         TM    DS1DSORG,DS1DSGIS
         BNO   *+10
         MVC   PORG,=CL2'IS'
         TM    DS1DSORG,DS1DSGPS
         BNO   *+10
         MVC   PORG,=CL2'PS'
         TM    DS1DSORG,DS1DSGDA
         BNO   *+10
         MVC   PORG,=CL2'DA'
         TM    DS1DSORG,DS1DSGPO
         BNO   *+10
         MVC   PORG,=CL2'PO'
         TM    DS1DSORG+1,DS1ACBM
         BO    VVDSREAD
         B     VERRECFM
***********************************************************************
* TRATA ARQUIVO VSAM                                                  *
***********************************************************************
VVDSREAD EQU   *
         MVC   PORG,=CL2'VS'
         STM   1,9,SALVA19
         XC    VVDSRBA,VVDSRBA
         POINT RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
         GET   RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
***********************************************************************
* LE REGISTRO DA VVDS E PROCURA A HEADER CELL DO ARQUIVO              *
***********************************************************************
NEXTREC  EQU   *
         GET   RPL=VVDSRPL
         LTR   15,15
         BNZ   VVDSERRO
         L     2,VVDSADR
         MVC   HALF,0(2)
         LH    3,HALF
         LA    2,2(2)
         SH    3,=H'2'
         CLI   2(2),X'E9'
         BNE   NEXTREC
***********************************************************************
* VERIFICA OS TIPOS DE COMPONENTES QUE SERAO TRATADOS                 *
***********************************************************************
NEXTCOMP EQU   *
         MVC   HALF,0(2)
         LH    4,HALF
         CLI   2(2),X'E9'
         BE    HEADER
         CLI   2(2),X'23'
         BE    VOLCOMP
***********************************************************************
* PREPARA LEITURA DO PROXIMO COMPONENTE                               *
***********************************************************************
SKIPIT   EQU   *
         AR    2,4
         SR    3,4
         BH    NEXTCOMP
         B     NEXTREC
***********************************************************************
* TRATA A HEADER CELL PARA VER SE O ARQUIVO E O DESEJADO              *
***********************************************************************
HEADER   EQU   *
         XR    7,7
         IC    7,8(2)
         SH    7,=H'2'
         EX    7,CLCVVDS
         BNE   NEXTREC
         B     SKIPIT
CLCVVDS  CLC   PDSN(0),9(2)
***********************************************************************
* FAZ O CALCULO DO ESPACO ALOCADO E UTILIZADO DO ARQUIVO              *
***********************************************************************
VOLCOMP  EQU   *
         CLI   25(2),X'80'
         BE    NEXTREC
         CLI   25(2),X'C0'
         BE    NEXTREC
         MVC   FULL,17(2)
         L     8,FULL
         MVC   HALF,21(2)
         LH    9,HALF
         MVC   FULL(4),9(2)
         L     7,FULL
         AR    7,8
         SLR   6,6
         S     7,=F'1'
         DR    6,8                GET NO OF BLOCKS USED
         SLR   6,6                IGNORE REMINDER ..
         AR    7,9                ROUND TO TRACK BOUNDARY IF NOT
         S     7,=F'1'
         DR    6,9                GET TRACKS USED
         ST    7,TRK_USED         USED TRACKS
         MVC   FULL(4),13(2)     HIGH ALLOCATED RBA
         L     7,FULL
         AR    7,8                ROUND TO BLOCK BOUNDARY
         SLR   6,6
         S     7,=F'1'
         DR    6,8                GET NO OF BLOCKS ALLOCATED
         SLR   6,6                CLEAR THE REMINDER
         AR    7,9                ROUND TO TRACK BOUNDARY
         S     7,=F'1'            LESS 1
         DR    6,9                GET TRACKS ALLLOCATED
         ST    7,TRK_ALOC         ALLOCATED TRACKS
         LA    2,42(2)            POINT TO EXTENT INFORMATION
         SH    4,=H'42'           REMAINING LENGTH
         SLR   5,5                INITIALISE ACTUAL TRACKS
***********************************************************************
* COMPUTA OUTROS EXTENTS DO ARQUIVO                                   *
***********************************************************************
NEXTEXT  EQU   *
         MVC   HALF,10(2)        EXTENT LENGTH
         AH    5,HALF
         LA    2,20(2)            POINT TO NEXT EXT
         SH    4,=H'20'           REMAINING LENGTH
         BH    NEXTEXT            NEXT EXTENT
         LR    7,5                ALLOCATED TRACKS
         CVD   7,DOUBLE
         L     7,TRK_USED
         MR    6,5                USE TRACKS * ACTUAL ALLOCATED
         D     6,TRK_ALOC         GET ACTUAL USED TRACKS
         LTR   6,6                REMINDER ZERO
         BZ    *+8
         LA    7,1(7)             OTHERWISE INCREMENT QUOTIENT 1
         CVD   7,DOUBLE
         ZAP   TRK_USED,DOUBLE
VVDSEOD  EQU   *
         LM    1,9,SALVA19
         B     CALCSPAC
***********************************************************************
* VERIFICA O TIPO DE REGISTRO DO ARQUIVO                              *
***********************************************************************
VERRECFM EQU   *
         MVC   HALF,DS1LSTAR
         LH    15,HALF
         LA    15,1(15)
         CVD   15,DOUBLE
         ZAP   TRK_USED,DOUBLE
***********************************************************************
* CALCULA O ESPACO ALOCADO PELO ARQUIVO                               *
***********************************************************************
CALCSPAC EQU   *
         LA    5,DS1EXT1
         XR    6,6
         ICM   6,1,EXTNTS
         LTR   6,6
         BZ    PRINTL
         CH    6,=H'3'
         BH    ADDFMT3
         BAL   14,ADDCYL
         B     PRINTL
ADDFMT3  EQU   *
         SH    6,=H'3'
         STCM  6,1,EXTNTS
         LA    6,3
         BAL   14,ADDCYL
         OI    FMT3,X'FF'
         B     READVTIX
***********************************************************************
* ROTINA PARA CALCULO DO ESPACO ALOCADO PELO ARQUIVO                  *
***********************************************************************
ADDCYL   EQU   *
         STM   14,15,SALVA14
         XR    15,15
         ICM   15,3,2(5)
         CVD   15,DOUBLE
         ZAP   CYL_LOW_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,4(5)
         CVD   15,DOUBLE
         ZAP   TRK_LOW_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,6(5)
         CVD   15,DOUBLE
         ZAP   CYL_HIGH_EXTENT,DOUBLE
         XR    15,15
         ICM   15,3,8(5)
         CVD   15,DOUBLE
         ZAP   TRK_HIGH_EXTENT,DOUBLE
         MP    CYL_LOW_EXTENT,TRK_CYL
         MP    CYL_HIGH_EXTENT,TRK_CYL
         AP    CYL_LOW_EXTENT,TRK_LOW_EXTENT
         AP    CYL_HIGH_EXTENT,TRK_HIGH_EXTENT
         SP    CYL_HIGH_EXTENT,CYL_LOW_EXTENT
         AP    CYL_HIGH_EXTENT,=P'1'
         AP    TRK_ALOC_EXTENT,CYL_HIGH_EXTENT
         LA    5,10(5)
         BCT   6,ADDCYL
         LM    14,15,SALVA14
         BR    14
***********************************************************************
* TOTALIZA O ESPACO ALOCADO POR ARQUIVO E VERIFICA SE DEVE IMPRIMIR   *
***********************************************************************
PRINTL   EQU   *
         ZAP   TRK_ALOC,TRK_ALOC_EXTENT
         CP    TRK_ALOC,=P'0'
         BH    ALOC_NAOZERO
         ZAP   TRK_ALOC,=P'1'
ALOC_NAOZERO EQU *
         LA    1,PALOC
         BCTR  1,0
         MVC   0(6,1),MASK5
         ED    0(6,1),TRK_ALOC+1
         ZAP   DOUBLE,TRK_USED
         CP    DOUBLE,=P'0'
         BH    USED_NAOZERO
         ZAP   DOUBLE,=P'1'
USED_NAOZERO EQU *
         CP    DOUBLE,TRK_ALOC
         BNH   DSNAME_NOFULL
         ZAP   DOUBLE,TRK_ALOC
DSNAME_NOFULL EQU *
         MP    DOUBLE,=PL2'100'
         DP    DOUBLE+3(5),TRK_ALOC+1(3)
         LA    1,PUSE
         BCTR  1,0
         MVC   0(4,1),MASK3
         ED    0(4,1),DOUBLE+3
         PERFORM ADD_TABELA
         B     READVTIX
***********************************************************************
* ADICIONA TABELA ISPF                                                *
***********************************************************************
ADD_TABELA EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL4,BUF4),VL
         BR    10
***********************************************************************
* TRATAMENTO DOS POSSIVEIS ERROS COM O ACESSO A VTOC                  *
***********************************************************************
IXSEQERR EQU   *
         CLI   CVSTAT,STAT032
         BE    IXCLOSE
         MVC   IXMSGMAC,=C'FIL'
IXMACERR EQU   *
         IC    1,CVSTAT
         N     1,=F'255'
         CVD   1,DOUBLE
         UNPK  IXMSGST,DOUBLE+6(2)
         OI    IXMSGST+2,X'F0'
         CVD   15,DOUBLE
         UNPK  IXMSGRC,DOUBLE+6(2)
         OI    IXMSGRC+2,X'F0'
         WTO   MF=(E,IXMSG)
IXCLOSE  EQU   *
         CVAFFILT ACCESS=RLSE,FCL=0,BUFLIST=0,                         X
               MF=(E,CVPL)
         B     CLOSE
***********************************************************************
* IMPRIME TOTAIS POR VOLUME                                           *
***********************************************************************
CLOSE    EQU   *
         CLOSE VTOC
         CLOSE VVDS
***********************************************************************
* VERIFICA E RETIRA AUTORIZACAO                                       *
***********************************************************************
         TM    FLAG_AUTH,X'FF'
         BNO   UNALLOC
         LA    0,2
         SVC   255
***********************************************************************
* LIBERA O VOLUME E A VTOC ALOCADOS                                   *
***********************************************************************
UNALLOC  EQU   *
         LA    1,ALOC
         MVC   ALOCTP,=A(VTOCULOC)
         MVC   ALOCVC,=AL1(2)
         DYNALLOC
         LA    1,ALOC
         MVC   ALOCTP,=A(VVDSULOC)
         DYNALLOC
***********************************************************************
* MOSTRA O PAINEL COM OS DADOS OBTIDOS                                *
***********************************************************************
DISPLAY_TAB EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL1,BUF1),VL
         L     15,ISPEXEC@
         CALL  (15),(BUFL7,BUF7),VL
DISPLAY_TAB_001 EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL8,BUF8),VL
         LTR   15,15
         BZ    DISPLAY_TAB_001
END_PROGRAM EQU *
         L     15,ISPEXEC@
         CALL  (15),(BUFL5,BUF5),VL
         L     15,ISPEXEC@
         CALL  (15),(BUFL6,BUF6),VL
***********************************************************************
* ENCERRA O PROGRAMA                                                  *
***********************************************************************
RETURN   EQU   *
         L     15,RETCODE
         L     13,SA+4
         RETURN (14,12),RC=(15)
RETURN8  EQU   *
         MVC   RETCODE,=F'8'
         B     RETURN
***********************************************************************
* TRATA ERRO OCORRIDO DURANTE O ACESSO A VVDS                         *
***********************************************************************
VVDSERRO EQU   *
         SHOWCB RPL=VVDSRPL,AREA=FULL,LENGTH=4,FIELDS=(FDBK)
         L     15,FULL
         CVD   15,DOUBLE
         B     RETURN8
         LTORG
***********************************************************************
* DEFINE AREAS CONSTANTES PARA O PROGRAMA                             *
***********************************************************************
SA       DC    18F'0'
DOUBLE   DC    D'0'
TRK_ALOC DC    F'0'
TRK_USED DC    F'0'
NOME_VOLUME DC CL6' '
UNIT_VOLUME DC CL4' '
FULL     DC    F'0'
HALF     DC    H'0'
ISPEXEC@ DC    F'0'
ISPLINK@ DC    F'0'
VVDSADR  DC    F'0'
VVDSRBA  DC    F'0'
SALVA2   DC    F'0'
SALVA8   DC    F'0'
SALVA9   DC    F'0'
SALVA19  DC    9F'0'
SALVA14  DC    2F'0'
RETCODE  DC    F'0'
DEBADDR  DC    F'0'
UCBADDR  DC    F'0'
ADDRUCB  DC    F'0'
GETADDR  DC    F'0'
MASK5    DC    X'402020202120'
MASK3    DC    X'40202120'
JULGRIN  DS    CL8
JULGROUT DS    CL8
TIMED    DS    CL7
DATED    DS    CL9
DATETIME DS    4F
         ORG   DATETIME
TIME     DS    CL4
         DS    CL4
DATE     DS    CL5
         DS    CL3
         ORG
EXTNTS   DS    X
FLAG     DS    X
FLAG_AUTH DS   X
FLAG_OPEN_VTOC DS X
FLAG_OPEN_VVDS DS X
FMT3     DS    X
***********************************************************************
* DEFINE AREAS DE TRABALHO PARA OPERACOES DE CALCULO                  *
***********************************************************************
TRK_CYL         DC    PL2'15'
TRK_LOW_EXTENT  DC    PL5'0'
TRK_HIGH_EXTENT DC    PL5'0'
CYL_LOW_EXTENT  DC    PL5'0'
CYL_HIGH_EXTENT DC    PL5'0'
TRK_ALOC_EXTENT DC    PL5'0'
TRK_ALOC_VOLUME DC    PL5'0'
TRK_USED_VOLUME DC    PL5'0'
CYL_FREE_VOLUME DC    PL5'0'
TRK_FREE_VOLUME DC    PL5'0'
***********************************************************************
* DEFINE VERIAVEIS DO ISPF                                            *
***********************************************************************
VDEFINE  DC    CL8'VDEFINE'
TYPE     DC    CL8'CHAR'
LIST0    DC    CL8'PVOL1'
LIST1    DC    CL8'PDSN'
LIST2    DC    CL8'PORG'
LIST3    DC    CL8'PALOC'
LIST4    DC    CL8'PUSE'
LIST5    DC    CL8'PCDATE'
LIST6    DC    CL8'PRDATE'
LIST7    DC    CL8'PEXT'
LEN2     DC    F'2'
LEN3     DC    F'3'
LEN5     DC    F'5'
LEN6     DC    F'6'
LEN10    DC    F'10'
LEN44    DC    F'44'
PVOL1    DC    CL6' '
PDSN     DC    CL44' '
PORG     DC    CL2' '
         DC    C' '
PALOC    DC    CL5' '
         DC    C' '
PUSE     DC    CL3' '
         DC    C' '
PEXT     DC    CL3' '
PCDATE   DC    CL10'DD/MM/AAAA'
PRDATE   DC    CL10'DD/MM/AAAA'
***********************************************************************
* DEFINE OS COMANDOS A SEREM EMITIDOS PELO ISPF                       *
***********************************************************************
BUFL1    DC    A(L'BUF1)
BUFL2    DC    A(L'BUF2)
BUFL3    DC    A(L'BUF3)
BUFL4    DC    A(L'BUF4)
BUFL5    DC    A(L'BUF5)
BUFL6    DC    A(L'BUF6)
BUFL7    DC    A(L'BUF7)
BUFL8    DC    A(L'BUF8)
BUF1     DC    C'TBSORT TBSPC00 FIELDS(PDSN    )'
BUF2     DC    C'TBOPEN TBSPC00 WRITE'
BUF3     DC    C'TBCREATE TBSPC00 NAMES(PDSN,PORG,PALOC,PUSE,PEXT,PCDATX
               E,PRDATE)'
BUF4     DC    C'TBADD TBSPC00'
BUF5     DC    C'TBEND TBSPC00'
BUF6     DC    C'TBERASE TBSPC00'
BUF7     DC    C'TBTOP TBSPC00'
BUF8     DC    C'TBDISPL TBSPC00 PANEL(SPACP002)'
***********************************************************************
* DEFINE AREAS PARA ALOCACAO DINAMICA DOS VOLUMES                     *
***********************************************************************
ALOC     DC    A(X'80000000'+ALOCRB)
ALOCRB   DC    AL1(20)
ALOCVC   DC    AL1(1)
         DC    AL2(0)
ALOCER   DC    AL2(0)
ALOCIN   DC    AL2(0)
ALOCTP   DC    A(0)
         DC    A(0)
         DC    A(0)
DDVVDS   DC    XL2'1',XL2'1',AL2(8),CL8'VVDS'
DSNVVDS  DC    XL2'2',XL2'1',AL2(17),CL17'SYS1.VVDS.V'
DISPVVDS DC    XL2'4',XL2'1',XL2'1',XL1'8'
VVDSALOC CALL  ,(DDVVDS,DSNVVDS,DISPVVDS),VL,MF=L
VVDSULOC CALL  ,(DDVVDS,DSNVVDS,UFORCE),VL,MF=L
DDNX     DC    XL2'1',XL2'1',AL2(8),CL8'VTOC'
DISP     DC    XL2'4',XL2'1',XL2'1',XL1'8'
UNIT     DC    XL2'15',XL2'1',AL2(4),CL4' '
VOLSER   DC    XL2'10',XL2'1',AL2(6),CL6' '
VTOCALOC CALL  ,(DDNX,DISP,UNIT,VOLSER),VL,MF=L
VTOCULOC CALL  ,(DDNX),VL,MF=L
UFORCE   DC    XL2'7',XL2'0'
***********************************************************************
* AREA PARA EMISSAO DE WTO COM ERRO DE ACESSO AO VOLUME               *
***********************************************************************
IXMSG    WTO   'ERROR FROM CVAFXXX - R15=YYY CVSTAT=ZZZ',MF=L,         X
               ROUTCDE=11
         ORG   IXMSG+4+15
IXMSGMAC DS    CL3,CL7
IXMSGRC  DS    CL3,CL8
IXMSGST  DS    CL3
         ORG
***********************************************************************
* OBTEM ESPACO PARA AREA DAS MACROS DE MAPEAMENTO                     *
***********************************************************************
FCL$ID   DC    CL4'FCL'
FCL$DEF  DS    (FCLHDLEN+FCLDSNEL)X
FCL$SIZE EQU   *-FCL$DEF
BFLH$DEF DS    (BFLHLN)X
BFLE$DEF DS    (BFLE$N*BFLELN)X
BFL$SIZE EQU   *-BFLH$DEF
DSCB$DEF DS    (BFLE$N*DSCB$SIZ)X
BFLE$N   EQU   11
***********************************************************************
* DEFINE ACB E RPL QUE SERAO USADAS PARA LEITURA DA VVDS              *
***********************************************************************
VVDS     ACB   DDNAME=VVDS,MACRF=(ADR,SEQ,IN),EXLST=EODAD
VVDSRPL  RPL   ACB=VVDS,AREA=VVDSADR,AREALEN=4,ARG=VVDSRBA,            X
               OPTCD=(ADR,SEQ,LOC)
EODAD    EXLST EODAD=VVDSEOD
***********************************************************************
* BLOCO DA DSCB E AREAS PARA I/O                                      *
***********************************************************************
CVPL     CVAFFILT MF=L,BRANCH=NO,FLTAREA=KEEP
VTOC     DCB   DDNAME=VTOC,DSORG=PS,RECFM=U,KEYLEN=44,BLKSIZE=96,      X
               MACRF=(R),EODAD=CLOSE,EXLST=RDJFLIST
RDJFLIST DC    X'87',AL3(JFCBAREA)
JFCBAREA DC    176X'0'
***********************************************************************
* MACROS PARA MAPEAMENTO DAS AREAS A SEREM TRABALHADAS                *
***********************************************************************
         DCBD  DSORG=PS,DEVD=DA
         IEZDEB ,
JFCB     DSECT
         IEFJFCBN ,
CVPL$MAP ICVAFPL CVPLFSA=YES
FCL$MAP  ICVFCL
BFL$MAP  ICVAFBFL
DSCB$MAP DSECT
         IECSDSL1 (1)
DSCB$SIZ EQU   *-IECSDSL1
         CVT   DSECT=YES
         DSECT
         UCBMAP
         END   SPACEDS
